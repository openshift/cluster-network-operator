// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/openshift/openshift-network-operator/pkg/apis/networkoperator.openshift.io/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// NetworkConfigLister helps list NetworkConfigs.
type NetworkConfigLister interface {
	// List lists all NetworkConfigs in the indexer.
	List(selector labels.Selector) (ret []*v1.NetworkConfig, err error)
	// NetworkConfigs returns an object that can list and get NetworkConfigs.
	NetworkConfigs(namespace string) NetworkConfigNamespaceLister
	NetworkConfigListerExpansion
}

// networkConfigLister implements the NetworkConfigLister interface.
type networkConfigLister struct {
	indexer cache.Indexer
}

// NewNetworkConfigLister returns a new NetworkConfigLister.
func NewNetworkConfigLister(indexer cache.Indexer) NetworkConfigLister {
	return &networkConfigLister{indexer: indexer}
}

// List lists all NetworkConfigs in the indexer.
func (s *networkConfigLister) List(selector labels.Selector) (ret []*v1.NetworkConfig, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.NetworkConfig))
	})
	return ret, err
}

// NetworkConfigs returns an object that can list and get NetworkConfigs.
func (s *networkConfigLister) NetworkConfigs(namespace string) NetworkConfigNamespaceLister {
	return networkConfigNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// NetworkConfigNamespaceLister helps list and get NetworkConfigs.
type NetworkConfigNamespaceLister interface {
	// List lists all NetworkConfigs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.NetworkConfig, err error)
	// Get retrieves the NetworkConfig from the indexer for a given namespace and name.
	Get(name string) (*v1.NetworkConfig, error)
	NetworkConfigNamespaceListerExpansion
}

// networkConfigNamespaceLister implements the NetworkConfigNamespaceLister
// interface.
type networkConfigNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all NetworkConfigs in the indexer for a given namespace.
func (s networkConfigNamespaceLister) List(selector labels.Selector) (ret []*v1.NetworkConfig, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.NetworkConfig))
	})
	return ret, err
}

// Get retrieves the NetworkConfig from the indexer for a given namespace and name.
func (s networkConfigNamespaceLister) Get(name string) (*v1.NetworkConfig, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("networkconfig"), name)
	}
	return obj.(*v1.NetworkConfig), nil
}
