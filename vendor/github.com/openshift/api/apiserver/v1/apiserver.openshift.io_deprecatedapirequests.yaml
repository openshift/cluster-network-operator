apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
  name: deprecatedapirequests.apiserver.openshift.io
spec:
  group: apiserver.openshift.io
  names:
    kind: DeprecatedAPIRequest
    listKind: DeprecatedAPIRequestList
    plural: deprecatedapirequests
    singular: deprecatedapirequest
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: DeprecatedAPIRequest tracts requests made to a deprecated API.
          The instance name should be of the form `resource.version.group`, matching
          the deprecated resource.
        type: object
        required:
        - spec
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: spec defines the characteristics of the resource.
            type: object
            properties:
              removedRelease:
                description: removedRelease is when the API will be removed.
                type: string
                maxLength: 64
                minLength: 3
                pattern: ^[0-9][0-9]*\.[0-9][0-9]*$
          status:
            description: status contains the observed state of the resource.
            type: object
            properties:
              conditions:
                description: conditions contains details of the current status of
                  this API Resource.
                type: array
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  type: object
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      type: string
                      format: date-time
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      type: string
                      maxLength: 32768
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      type: integer
                      format: int64
                      minimum: 0
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      type: string
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      type: string
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      type: string
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
              requestsLast24h:
                description: requestsLast24h contains request history for the last
                  24 hours, indexed by the hour, so 12:00AM-12:59 is in index 0, 6am-6:59am
                  is index 6, etc. The index of the current hour is updated live and
                  then duplicated into the requestsLastHour field.
                type: array
                items:
                  description: RequestLog logs request for various nodes.
                  type: object
                  properties:
                    nodes:
                      description: nodes contains logs of requests per node.
                      type: array
                      items:
                        description: NodeRequestLog contains logs of requests to a
                          certain node.
                        type: object
                        properties:
                          lastUpdate:
                            description: lastUpdate should *always* being within the
                              hour this is for.  This is a time indicating the last
                              moment the server is recording for, not the actual update
                              time.
                            type: string
                            format: date-time
                          nodeName:
                            description: nodeName where the request are being handled.
                            type: string
                          users:
                            description: users contains request details by top 10
                              users. Note that because in the case of an apiserver
                              restart the list of top 10 users is determined on a
                              best-effort basis, the list might be imprecise.
                            type: array
                            items:
                              description: RequestUser contains logs of a user's requests.
                              type: object
                              properties:
                                count:
                                  description: count of requests.
                                  type: integer
                                requests:
                                  description: requests details by verb.
                                  type: array
                                  items:
                                    description: RequestCount counts requests by API
                                      request verb.
                                    type: object
                                    properties:
                                      count:
                                        description: count of requests for verb.
                                        type: integer
                                      verb:
                                        description: verb of API request (get, list,
                                          create, etc...)
                                        type: string
                                username:
                                  description: userName that made the request.
                                  type: string
              requestsLastHour:
                description: requestsLastHour contains request history for the current
                  hour. This is porcelain to make the API easier to read by humans
                  seeing if they addressed a problem. This field is reset on the hour.
                type: object
                properties:
                  nodes:
                    description: nodes contains logs of requests per node.
                    type: array
                    items:
                      description: NodeRequestLog contains logs of requests to a certain
                        node.
                      type: object
                      properties:
                        lastUpdate:
                          description: lastUpdate should *always* being within the
                            hour this is for.  This is a time indicating the last
                            moment the server is recording for, not the actual update
                            time.
                          type: string
                          format: date-time
                        nodeName:
                          description: nodeName where the request are being handled.
                          type: string
                        users:
                          description: users contains request details by top 10 users.
                            Note that because in the case of an apiserver restart
                            the list of top 10 users is determined on a best-effort
                            basis, the list might be imprecise.
                          type: array
                          items:
                            description: RequestUser contains logs of a user's requests.
                            type: object
                            properties:
                              count:
                                description: count of requests.
                                type: integer
                              requests:
                                description: requests details by verb.
                                type: array
                                items:
                                  description: RequestCount counts requests by API
                                    request verb.
                                  type: object
                                  properties:
                                    count:
                                      description: count of requests for verb.
                                      type: integer
                                    verb:
                                      description: verb of API request (get, list,
                                        create, etc...)
                                      type: string
                              username:
                                description: userName that made the request.
                                type: string
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
