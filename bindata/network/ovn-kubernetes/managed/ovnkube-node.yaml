kind: DaemonSet
apiVersion: apps/v1
metadata:
  {{ if eq .OVN_NODE_MODE "dpu-host" }}
  name: ovnkube-node-dpu-host
  {{ else if eq .OVN_NODE_MODE "smart-nic" }}
  name: ovnkube-node-smart-nic
  {{ else }}
  name: ovnkube-node
  {{ end }}
  namespace: openshift-ovn-kubernetes
  annotations:
    kubernetes.io/description: |
      This daemonset launches the ovn-kubernetes per node networking components.
    release.openshift.io/version: "{{.ReleaseVersion}}"
    {{ if .OVNIPsecEnable }}
    networkoperator.openshift.io/ipsec-enabled: "true"
    {{ end }}
spec:
  selector:
    matchLabels:
      {{ if eq .OVN_NODE_MODE "dpu-host" }}
      app: ovnkube-node-dpu-host
      {{ else if eq .OVN_NODE_MODE "smart-nic" }}
      app: ovnkube-node-smart-nic
      {{ else }}
      app: ovnkube-node
      {{ end }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 10%
  template:
    metadata:
      annotations:
        target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        network.operator.openshift.io/ovnkube-script-lib-hash: "{{.OVNKubeConfigHash}}"
      labels:
        {{ if eq .OVN_NODE_MODE "dpu-host" }}
        app: ovnkube-node-dpu-host
        {{ else if eq .OVN_NODE_MODE "smart-nic" }}
        app: ovnkube-node-smart-nic
        {{ else }}
        app: ovnkube-node
        {{ end }}
        component: network
        type: infra
        openshift.io/component: network
        kubernetes.io/os: "linux"
        ovn-db-pod: "true"
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              {{ if .DpuHostModeLabel }}
              - key: {{ .DpuHostModeLabel }}
                {{ if eq .OVN_NODE_MODE "dpu-host" }}
                operator: Exists
                {{ else if eq .OVN_NODE_MODE "smart-nic" }}
                operator: DoesNotExist
                {{ else }}
                operator: DoesNotExist
                {{ end }}
              {{ end }}
              {{ if .SmartNicModeLabel }}
              - key: {{ .SmartNicModeLabel }}
                {{ if eq .OVN_NODE_MODE "dpu-host" }}
                operator: DoesNotExist
                {{ else if eq .OVN_NODE_MODE "smart-nic" }}
                operator: Exists
                {{ else }}
                operator: DoesNotExist
                {{ end }}
              {{ end }}
              {{ if .DpuModeLabel }}
              - key: {{ .DpuModeLabel }}
                operator: DoesNotExist
              {{ end }}
      serviceAccountName: ovn-kubernetes-node
      hostNetwork: true
      dnsPolicy: Default
      hostPID: true
      priorityClassName: "system-node-critical"
      # volumes in all containers:
      # (container) -> (host)
      # /etc/openvswitch -> /etc/openvswitch - ovsdb system id
      # /var/lib/openvswitch -> /var/lib/openvswitch/data - ovsdb data
      # /run/openvswitch -> tmpfs - ovsdb sockets
      # /env -> configmap env-overrides - debug overrides
      containers:
{{ if or (eq .OVN_NODE_MODE "full") (eq .OVN_NODE_MODE "smart-nic") }}
      # ovn-controller: programs the vswitch with flows from the sbdb
      - name: ovn-controller
        image: "{{.OvnImage}}"
        command:
        - /bin/bash
        - -c
        - |
          set -e
          . /ovnkube-lib/ovnkube-lib.sh || exit 1
          start-ovn-controller ${OVN_LOG_LEVEL}
        securityContext:
          privileged: true
        env:
        - name: OVN_LOG_LEVEL
          value: info
        - name: K8S_NODE
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - mountPath: /ovnkube-lib
          name: ovnkube-script-lib
        - mountPath: /run/openvswitch
          name: run-openvswitch
        - mountPath: /run/ovn/
          name: run-ovn
        - mountPath: /etc/openvswitch
          name: etc-openvswitch
        - mountPath: /etc/ovn/
          name: etc-openvswitch
        - mountPath: /var/lib/openvswitch
          name: var-lib-openvswitch
        - mountPath: /env
          name: env-overrides
        - mountPath: /var/log/ovn/
          name: node-log
        - mountPath: /dev/log
          name: log-socket
        terminationMessagePolicy: FallbackToLogsOnError
        resources:
          requests:
            cpu: 10m
            memory: 300Mi
      - name: ovn-acl-logging
        image: "{{.OvnImage}}"
        command:
        - /bin/bash
        - -c
        - |
          set -euo pipefail
          . /ovnkube-lib/ovnkube-lib.sh || exit 1
          start-audit-log-rotation
        resources:
          requests:
            cpu: 10m
            memory: 20Mi
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /ovnkube-lib
          name: ovnkube-script-lib
        - mountPath: /var/log/ovn/
          name: node-log
        - mountPath: /run/ovn/
          name: run-ovn
{{ end }}
      - name: kube-rbac-proxy-node
        image: {{.KubeRBACProxyImage}}
        command:
        - /bin/bash
        - -c
        - |
          #!/bin/bash
          set -euo pipefail
          . /ovnkube-lib/ovnkube-lib.sh || exit 1
          start-rbac-proxy-node ovn-node-metrics 9103 29103 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
        ports:
        - containerPort: 9103
          name: https
        resources:
          requests:
            cpu: 10m
            memory: 20Mi
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /ovnkube-lib
          name: ovnkube-script-lib
        - name: ovn-node-metrics-cert
          mountPath: /etc/pki/tls/metrics-cert
          readOnly: True
      - name: kube-rbac-proxy-ovn-metrics
        image: {{.KubeRBACProxyImage}}
        command:
        - /bin/bash
        - -c
        - |
          #!/bin/bash
          set -euo pipefail
          . /ovnkube-lib/ovnkube-lib.sh || exit 1
          start-rbac-proxy-node ovn-metrics 9105 29105 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
        ports:
        - containerPort: 9105
          name: https
        resources:
          requests:
            cpu: 10m
            memory: 20Mi
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /ovnkube-lib
          name: ovnkube-script-lib
        - name: ovn-node-metrics-cert
          mountPath: /etc/pki/tls/metrics-cert
          readOnly: True
      # ovn-northd: convert network objects in nbdb to flows in sbdb
      - name: northd
        image: "{{.OvnImage}}"
        command:
        - /bin/bash
        - -c
        - |
          set -xem
          if [[ -f /env/_master ]]; then
            set -o allexport
            source /env/_master
            set +o allexport
          fi
          . /ovnkube-lib/ovnkube-lib.sh || exit 1

          trap quit-ovn-northd TERM INT
          start-ovn-northd "${OVN_LOG_LEVEL}"
        env:
        - name: OVN_LOG_LEVEL
          value: info
        volumeMounts:
        - mountPath: /ovnkube-lib
          name: ovnkube-script-lib
        - mountPath: /etc/ovn
          name: etc-openvswitch
        - mountPath: /var/log/ovn
          name: node-log
        - mountPath: /run/ovn/
          name: run-ovn
        - mountPath: /env
          name: env-overrides
        resources:
          requests:
            cpu: 10m
            memory: 300Mi
        terminationMessagePolicy: FallbackToLogsOnError

      # nbdb: the northbound, or logical network object DB. In standalone mode listening on unix socket.
      - name: nbdb
        image: "{{.OvnImage}}"
        command:
        - /bin/bash
        - -c
        - |
          set -xem
          if [[ -f /env/_master ]]; then
            set -o allexport
            source /env/_master
            set +o allexport
          fi
          . /ovnkube-lib/ovnkube-lib.sh || exit 1

          trap quit-nbdb TERM INT
          start-nbdb ${OVN_LOG_LEVEL}
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                set -x
                . /ovnkube-lib/ovnkube-lib.sh || exit 1
                nbdb-post-start {{.OVN_NORTHD_PROBE_INTERVAL}}
        readinessProbe:
{{ if not .IsSNO }}
          initialDelaySeconds: 10
{{ end }}
          timeoutSeconds: 5
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -xeo pipefail
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              ovndb-readiness-probe "nb"
        env:
        - name: OVN_LOG_LEVEL
          value: info
        - name: K8S_NODE
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - mountPath: /ovnkube-lib
          name: ovnkube-script-lib
        - mountPath: /etc/ovn/
          name: etc-openvswitch
        - mountPath: /var/log/ovn
          name: node-log
        - mountPath: /run/ovn/
          name: run-ovn
        - mountPath: /env
          name: env-overrides
        resources:
          requests:
            cpu: 10m
            memory: 300Mi
        terminationMessagePolicy: FallbackToLogsOnError

      # sbdb: the southbound, or flow DB. In standalone mode listening on unix socket
      - name: sbdb
        image: "{{.OvnImage}}"
        command:
        - /bin/bash
        - -c
        - |
          set -xem
          if [[ -f /env/_master ]]; then
            set -o allexport
            source /env/_master
            set +o allexport
          fi
          . /ovnkube-lib/ovnkube-lib.sh || exit 1

          trap quit-sbdb TERM INT
          start-sbdb ${OVN_LOG_LEVEL}
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                set -x
                . /ovnkube-lib/ovnkube-lib.sh || exit 1
                sbdb-post-start
        readinessProbe:
{{ if not .IsSNO }}
          initialDelaySeconds: 10
{{ end }}
          timeoutSeconds: 5
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -xeo pipefail
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              ovndb-readiness-probe "sb"
        env:
        - name: OVN_LOG_LEVEL
          value: info
        volumeMounts:
        - mountPath: /ovnkube-lib
          name: ovnkube-script-lib
        - mountPath: /etc/ovn/
          name: etc-openvswitch
        - mountPath: /run/ovn/
          name: run-ovn
        - mountPath: /var/log/ovn
          name: node-log
        - mountPath: /env
          name: env-overrides
        resources:
          requests:
            cpu: 10m
            memory: 300Mi
        terminationMessagePolicy: FallbackToLogsOnError

      # ovnkube-controller: does node-level bookkeeping and configuration
      - name: ovnkube-controller
        image: "{{.OvnImage}}"
        command:
        - /bin/bash
        - -c
        - |
          set -xe
          . /ovnkube-lib/ovnkube-lib.sh || exit 1
          start-ovnkube-node ${OVN_KUBE_LOG_LEVEL} 29103 29105
        env:
        # for kubectl
        - name: KUBERNETES_SERVICE_PORT
          value: "{{.KUBERNETES_SERVICE_PORT}}"
        - name: KUBERNETES_SERVICE_HOST
          value: "{{.KUBERNETES_SERVICE_HOST}}"
        - name: OVN_CONTROLLER_INACTIVITY_PROBE
          value: "{{.OVN_CONTROLLER_INACTIVITY_PROBE}}"
        - name: OVN_KUBE_LOG_LEVEL
          value: "4"
        {{ if .NetFlowCollectors }}
        - name: NETFLOW_COLLECTORS
          value: "{{.NetFlowCollectors}}"
        {{ end }}
        {{ if .SFlowCollectors }}
        - name: SFLOW_COLLECTORS
          value: "{{.SFlowCollectors}}"
        {{ end }}
        {{ if .IPFIXCollectors }}
        - name: IPFIX_COLLECTORS
          value: "{{.IPFIXCollectors}}"
        {{ end }}
        {{ if .IPFIXCacheMaxFlows }}
        - name: IPFIX_CACHE_MAX_FLOWS
          value: "{{.IPFIXCacheMaxFlows}}"
        {{ end }}
        {{ if .IPFIXCacheActiveTimeout }}
        - name: IPFIX_CACHE_ACTIVE_TIMEOUT
          value: "{{.IPFIXCacheActiveTimeout}}"
        {{ end }}
        {{ if .IPFIXSampling }}
        - name: IPFIX_SAMPLING
          value: "{{.IPFIXSampling}}"
        {{ end }}
        {{ if and (.MgmtPortResourceName) (or (eq .OVN_NODE_MODE "smart-nic") (eq .OVN_NODE_MODE "dpu-host")) }}
        - name: OVNKUBE_NODE_MGMT_PORT_DP_RESOURCE_NAME
          value: {{ .MgmtPortResourceName }}
        {{ end }}
        - name: K8S_NODE
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        ports:
        - name: metrics-port
          containerPort: 29103
        ports:
        - name: ovnmetrics-port
          containerPort: 29105
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /ovnkube-lib
          name: ovnkube-script-lib
{{ if .NETWORK_NODE_IDENTITY_ENABLE }}
        - mountPath: /var/lib/kubelet
          name: host-kubelet
          readOnly: true
{{ end }}
        # for checking ovs-configuration service
        - mountPath: /etc/systemd/system
          name: systemd-units
          readOnly: true
        # for the iptables wrapper
        - mountPath: /host
          name: host-slash
          readOnly: true
          mountPropagation: HostToContainer
        # for the CNI server socket
        - mountPath: /run/ovn-kubernetes/
          name: host-run-ovn-kubernetes
        # accessing bind-mounted net namespaces
        - mountPath: /run/netns
          name: host-run-netns
          readOnly: true
          mountPropagation: HostToContainer
        # for installing the CNI plugin binary
        - mountPath: /cni-bin-dir
          name: host-cni-bin
        # for installing the CNI configuration file
        - mountPath: /etc/cni/net.d
          name: host-cni-netd
        # Where we store IP allocations
        - mountPath: /var/lib/cni/networks/ovn-k8s-cni-overlay
          name: host-var-lib-cni-networks-ovn-kubernetes
        - mountPath: /run/openvswitch
          name: run-openvswitch
        - mountPath: /var/log/ovnkube/
          name: etc-openvswitch
        - mountPath: /run/ovn/
          name: run-ovn
        - mountPath: /etc/openvswitch
          name: etc-openvswitch
        - mountPath: /etc/ovn/
          name: etc-openvswitch
        - mountPath: /var/lib/openvswitch
          name: var-lib-openvswitch
        - mountPath: /run/ovnkube-config/
          name: ovnkube-config
        - mountPath: /env
          name: env-overrides
        resources:
          requests:
            cpu: 10m
            memory: 600Mi
            {{ if and (.MgmtPortResourceName) (or (eq .OVN_NODE_MODE "smart-nic") (eq .OVN_NODE_MODE "dpu-host")) }}
            {{ .MgmtPortResourceName }}: '1'
            {{ end }}
          {{ if and (.MgmtPortResourceName) (or (eq .OVN_NODE_MODE "smart-nic") (eq .OVN_NODE_MODE "dpu-host")) }}
          limits:
            {{ .MgmtPortResourceName }}: '1'
          {{ end }}
        lifecycle:
          preStop:
            exec:
              command: ["rm","-f","/etc/cni/net.d/10-ovn-kubernetes.conf"]
        readinessProbe:
          exec:
            command: ["test", "-f", "/etc/cni/net.d/10-ovn-kubernetes.conf"]
          initialDelaySeconds: 5
          periodSeconds: 30
      {{- if .OVNPlatformAzure}}
      - name: drop-icmp
        image: "{{.OvnImage}}"
        command:
        - /bin/bash
        - -c
        - |
          set -xe
{{ if .NETWORK_NODE_IDENTITY_ENABLE }}
          # Wait for cert file
          retries=0
          tries=20
          key_cert="/etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem"
          while [ ! -f "${key_cert}" ]; do
            (( retries += 1 ))
            if [[ "${retries}" -gt ${tries} ]]; then
              echo "$(date -Iseconds) - ERROR - ${key_cert} not found"
              return 1
            fi
            sleep 1
          done

          cat << EOF > /var/run/ovnkube-kubeconfig
          apiVersion: v1
          clusters:
            - cluster:
                certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                server: {{.K8S_APISERVER}}
              name: default-cluster
          contexts:
            - context:
                cluster: default-cluster
                namespace: default
                user: default-auth
              name: default-context
          current-context: default-context
          kind: Config
          preferences: {}
          users:
            - name: default-auth
              user:
                client-certificate: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
                client-key: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
          EOF
          export KUBECONFIG=/var/run/ovnkube-kubeconfig
{{ end }}

          touch /var/run/ovn/add_iptables.sh
          chmod 0755 /var/run/ovn/add_iptables.sh
          cat <<'EOF' > /var/run/ovn/add_iptables.sh
          #!/bin/sh
          if [ -z "$3" ]
          then
               echo "Called with host address missing, ignore"
               exit 0
          fi
          echo "Adding ICMP drop rule for '$3' "
          if iptables -C CHECK_ICMP_SOURCE -p icmp -s $3 -j ICMP_ACTION
          then
               echo "iptables already set for $3"
          else
               iptables -A CHECK_ICMP_SOURCE -p icmp -s $3 -j ICMP_ACTION
          fi
          EOF

          echo "I$(date "+%m%d %H:%M:%S.%N") - drop-icmp - start drop-icmp ${K8S_NODE}"
          iptables -X CHECK_ICMP_SOURCE || true
          iptables -N CHECK_ICMP_SOURCE || true
          iptables -F CHECK_ICMP_SOURCE
          iptables -D INPUT -p icmp --icmp-type fragmentation-needed -j CHECK_ICMP_SOURCE || true
          iptables -I INPUT -p icmp --icmp-type fragmentation-needed -j CHECK_ICMP_SOURCE
          iptables -N ICMP_ACTION || true
          iptables -F ICMP_ACTION
          iptables -A ICMP_ACTION -j LOG
          iptables -A ICMP_ACTION -j DROP
          #
          ip addr show
          ip route show
          iptables -nvL
          iptables -nvL -t nat
          oc observe pods -n openshift-ovn-kubernetes --listen-addr='' -l app=ovnkube-node -a '{ .status.hostIP }' -- /var/run/ovn/add_iptables.sh
          #systemd-run -qPG -- oc observe pods -n openshift-ovn-kubernetes --listen-addr='' -l app=ovnkube-node -a '{ .status.hostIP }' -- /var/run/ovn/add_iptables.sh
        lifecycle:
          preStop:
            exec:
              command: ["/bin/bash", "-c", "echo drop-icmp done"]
        securityContext:
          privileged: true
        volumeMounts:
{{ if .NETWORK_NODE_IDENTITY_ENABLE }}
        - mountPath: /etc/ovn/
          name: etc-openvswitch
{{ end }}
        # for the iptables wrapper
        - mountPath: /host
          name: host-slash
          readOnly: true
          mountPropagation: HostToContainer
        - mountPath: /run/ovn/
          name: run-ovn
        resources:
          requests:
            cpu: 5m
            memory: 20Mi
        env:
        - name: K8S_NODE
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
      {{- end}}
      nodeSelector:
        kubernetes.io/os: "linux"
      volumes:
{{ if .NETWORK_NODE_IDENTITY_ENABLE }}
      - name: host-kubelet
        hostPath:
          path: /var/lib/kubelet
{{ end }}
      # for checking ovs-configuration service
      - name: systemd-units
        hostPath:
          path: /etc/systemd/system
      # used for iptables wrapper scripts
      - name: host-slash
        hostPath:
          path: /
      - name: host-run-netns
        hostPath:
          path: /run/netns
      - name: var-lib-openvswitch
        hostPath:
          path: /var/lib/openvswitch/data
      - name: etc-openvswitch
        # used by cluster-node-tuning-operator to enable /etc/openvswitch/enable_dynamic_cpu_affinity.
        # See OCPBUGS-18392. Notify cluster-node-tuning-operator when this changes.
        hostPath:
          path: /var/lib/ovn-ic/etc  # different path than 4.13 and single-zone 4.14 to avoid collision during upgrade
      - name: run-openvswitch
        hostPath:
          path: /var/run/openvswitch
      - name: run-ovn
        hostPath:
          path: /var/run/ovn-ic  # different path than 4.13 and single-zone 4.14 to avoid collision during upgrade
      {{ if or (eq .OVN_NODE_MODE "full") (eq .OVN_NODE_MODE "smart-nic") }}
      # Used for placement of ACL audit logs
      - name: node-log
        hostPath:
          path: /var/log/ovn
      - name: log-socket
        hostPath:
          path: /dev/log
      {{ end }}
      # For CNI server
      - name: host-run-ovn-kubernetes
        hostPath:
          path: /run/ovn-kubernetes
      - name: host-cni-bin
        hostPath:
          path: "{{.CNIBinDir}}"
      - name: host-cni-netd
        hostPath:
          path: "{{.CNIConfDir}}"
      - name: host-var-lib-cni-networks-ovn-kubernetes
        hostPath:
          path: /var/lib/cni/networks/ovn-k8s-cni-overlay
      - name: ovnkube-config
        configMap:
          name: ovnkube-config
      - name: env-overrides
        configMap:
          name: env-overrides
          optional: true
      - name: ovn-node-metrics-cert
        secret:
          secretName: ovn-node-metrics-cert
          optional: true
      - name: ovnkube-script-lib
        configMap:
          name: ovnkube-script-lib
          defaultMode: 0744
      tolerations:
      - operator: "Exists"
