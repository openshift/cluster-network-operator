---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: egressfirewalls.k8s.ovn.org
spec:
  group: k8s.ovn.org
  names:
    kind: EgressFirewall
    listKind: EgressFirewallList
    plural: egressfirewalls
    singular: egressfirewall
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.status
      name: EgressFirewall Status
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: |-
          EgressFirewall describes the current egress firewall for a Namespace.
          Traffic from a pod to an IP address outside the cluster will be checked against
          each EgressFirewallRule in the pod's namespace's EgressFirewall, in
          order. If no rule matches (or no EgressFirewall is present) then the traffic
          will be allowed by default.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
            properties:
              name:
                type: string
                pattern: ^default$
          spec:
            description: Specification of the desired behavior of EgressFirewall.
            properties:
              egress:
                description: a collection of egress firewall rule objects
                items:
                  description: EgressFirewallRule is a single egressfirewall rule
                    object
                  properties:
                    ports:
                      description: ports specify what ports and protocols the rule
                        applies to
                      items:
                        description: EgressFirewallPort specifies the port to allow
                          or deny traffic to
                        properties:
                          port:
                            description: port that the traffic must match
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          protocol:
                            description: protocol (tcp, udp, sctp) that the traffic
                              must match.
                            pattern: ^TCP|UDP|SCTP$
                            type: string
                        required:
                        - port
                        - protocol
                        type: object
                      type: array
                    to:
                      description: to is the target that traffic is allowed/denied
                        to
                      maxProperties: 1
                      minProperties: 1
                      properties:
                        cidrSelector:
                          description: cidrSelector is the CIDR range to allow/deny
                            traffic to. If this is set, dnsName and nodeSelector must
                            be unset.
                          type: string
                        dnsName:
                          description: |-
                            dnsName is the domain name to allow/deny traffic to. If this is set, cidrSelector and nodeSelector must be unset.
                            For a wildcard DNS name, the '*' will match only one label. Additionally, only a single '*' can be
                            used at the beginning of the wildcard DNS name. For example, '*.example.com' will match 'sub1.example.com'
                            but won't match 'sub2.sub1.example.com'.
                          pattern: ^(\*\.)?([A-Za-z0-9-]+\.)*[A-Za-z0-9-]+\.?$
                          type: string
                        nodeSelector:
                          description: |-
                            nodeSelector will allow/deny traffic to the Kubernetes node IP of selected nodes. If this is set,
                            cidrSelector and DNSName must be unset.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                    type:
                      description: type marks this as an "Allow" or "Deny" rule
                      pattern: ^Allow|Deny$
                      type: string
                  required:
                  - to
                  - type
                  type: object
                type: array
            required:
            - egress
            type: object
          status:
            description: Observed status of EgressFirewall
            properties:
              messages:
                items:
                  type: string
                type: array
                x-kubernetes-list-type: set
              status:
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: egressips.k8s.ovn.org
spec:
  group: k8s.ovn.org
  names:
    kind: EgressIP
    listKind: EgressIPList
    plural: egressips
    shortNames:
    - eip
    singular: egressip
  scope: Cluster
  versions:
  - name: v1
    additionalPrinterColumns:
    - jsonPath: .spec.egressIPs[*]
      name: EgressIPs
      type: string
    - jsonPath: .status.items[*].node
      name: Assigned Node
      type: string
    - jsonPath: .status.items[*].egressIP
      name: Assigned EgressIPs
      type: string
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        description: EgressIP is a CRD allowing the user to define a fixed source IP for all egress traffic originating from any pods which match the EgressIP resource according to its spec definition.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Specification of the desired behavior of EgressIP.
            properties:
              egressIPs:
                description: EgressIPs is the list of egress IP addresses requested. Can be IPv4 and/or IPv6. This field is mandatory.
                items:
                  type: string
                type: array
              namespaceSelector:
                description: NamespaceSelector applies the egress IP only to the namespace(s) whose label matches this definition. This field is mandatory.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
              podSelector:
                description: 'PodSelector applies the egress IP only to the pods whose label matches this definition. This field is optional, and in case it is not set: results in the egress IP being applied to all pods in the namespace(s) matched by the NamespaceSelector. In case it is set: is intersected with the NamespaceSelector, thus applying the egress IP to the pods (in the namespace(s) already matched by the NamespaceSelector) which match this pod selector.'
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
            required:
            - egressIPs
            - namespaceSelector
            type: object
          status:
            description: Observed status of EgressIP. Read-only.
            properties:
              items:
                description: The list of assigned egress IPs and their corresponding node assignment.
                items:
                  description: The per node status, for those egress IPs who have been assigned.
                  properties:
                    egressIP:
                      description: Assigned egress IP
                      type: string
                    node:
                      description: Assigned node name
                      type: string
                  required:
                  - egressIP
                  - node
                  type: object
                type: array
            required:
            - items
            type: object
        required:
        - spec
        type: object
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: egressqoses.k8s.ovn.org
spec:
  group: k8s.ovn.org
  names:
    kind: EgressQoS
    listKind: EgressQoSList
    plural: egressqoses
    singular: egressqos
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.status
      name: Status
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: |-
          EgressQoS is a CRD that allows the user to define a DSCP value
          for pods egress traffic on its namespace to specified CIDRs.
          Traffic from these pods will be checked against each EgressQoSRule in
          the namespace's EgressQoS, and if there is a match the traffic is marked
          with the relevant DSCP value.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
            properties:
              name:
                type: string
                pattern: ^default$
          spec:
            description: EgressQoSSpec defines the desired state of EgressQoS
            properties:
              egress:
                description: a collection of Egress QoS rule objects
                items:
                  properties:
                    dscp:
                      description: DSCP marking value for matching pods' traffic.
                      maximum: 63
                      minimum: 0
                      type: integer
                    dstCIDR:
                      description: |-
                        DstCIDR specifies the destination's CIDR. Only traffic heading
                        to this CIDR will be marked with the DSCP value.
                        This field is optional, and in case it is not set the rule is applied
                        to all egress traffic regardless of the destination.
                      format: cidr
                      type: string
                    podSelector:
                      description: |-
                        PodSelector applies the QoS rule only to the pods in the namespace whose label
                        matches this definition. This field is optional, and in case it is not set
                        results in the rule being applied to all pods in the namespace.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                  - dscp
                  type: object
                type: array
            required:
            - egress
            type: object
          status:
            description: EgressQoSStatus defines the observed state of EgressQoS
            properties:
              conditions:
                description: An array of condition objects indicating details about
                  status of EgressQoS object.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              status:
                description: A concise indication of whether the EgressQoS resource
                  is applied with success.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: adminpolicybasedexternalroutes.k8s.ovn.org
spec:
  group: k8s.ovn.org
  names:
    kind: AdminPolicyBasedExternalRoute
    listKind: AdminPolicyBasedExternalRouteList
    plural: adminpolicybasedexternalroutes
    shortNames:
    - apbexternalroute
    singular: adminpolicybasedexternalroute
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.lastTransitionTime
      name: Last Update
      type: date
    - jsonPath: .status.status
      name: Status
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: AdminPolicyBasedExternalRoute is a CRD allowing the cluster administrators
          to configure policies for external gateway IPs to be applied to all the
          pods contained in selected namespaces. Egress traffic from the pods that
          belong to the selected namespaces to outside the cluster is routed through
          these external gateway IPs.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AdminPolicyBasedExternalRouteSpec defines the desired state
              of AdminPolicyBasedExternalRoute
            properties:
              from:
                description: From defines the selectors that will determine the target
                  namespaces to this CR.
                properties:
                  namespaceSelector:
                    description: NamespaceSelector defines a selector to be used to
                      determine which namespaces will be targeted by this CR
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                required:
                - namespaceSelector
                type: object
              nextHops:
                description: 'NextHops defines two types of hops: Static and Dynamic.
                  Each hop defines at least one external gateway IP.'
                minProperties: 1
                properties:
                  dynamic:
                    description: DynamicHops defines a slices of DynamicHop. This
                      field is optional.
                    items:
                      description: DynamicHop defines the configuration for a dynamic
                        external gateway interface. These interfaces are wrapped around
                        a pod object that resides inside the cluster. The field NetworkAttachmentName
                        captures the name of the multus network name to use when retrieving
                        the gateway IP to use. The PodSelector and the NamespaceSelector
                        are mandatory fields.
                      properties:
                        bfdEnabled:
                          default: false
                          description: BFDEnabled determines if the interface implements
                            the Bidirectional Forward Detection protocol. Defaults
                            to false.
                          type: boolean
                        namespaceSelector:
                          description: NamespaceSelector defines a selector to filter
                            the namespaces where the pod gateways are located.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        networkAttachmentName:
                          default: ""
                          description: NetworkAttachmentName determines the multus
                            network name to use when retrieving the pod IPs that will
                            be used as the gateway IP. When this field is empty, the
                            logic assumes that the pod is configured with HostNetwork
                            and is using the node's IP as gateway.
                          type: string
                        podSelector:
                          description: PodSelector defines the selector to filter
                            the pods that are external gateways.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - namespaceSelector
                      - podSelector
                      type: object
                    type: array
                  static:
                    description: StaticHops defines a slice of StaticHop. This field
                      is optional.
                    items:
                      description: StaticHop defines the configuration of a static
                        IP that acts as an external Gateway Interface. IP field is
                        mandatory.
                      properties:
                        bfdEnabled:
                          default: false
                          description: BFDEnabled determines if the interface implements
                            the Bidirectional Forward Detection protocol. Defaults
                            to false.
                          type: boolean
                        ip:
                          description: IP defines the static IP to be used for egress
                            traffic. The IP can be either IPv4 or IPv6.
                          pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$|^s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:)))(%.+)?s*
                          type: string
                      required:
                      - ip
                      type: object
                    type: array
                type: object
            required:
            - from
            - nextHops
            type: object
          status:
            description: AdminPolicyBasedRouteStatus contains the observed status
              of the AdminPolicyBased route types.
            properties:
              lastTransitionTime:
                description: Captures the time when the last change was applied.
                format: date-time
                type: string
              messages:
                description: An array of Human-readable messages indicating details
                  about the status of the object.
                items:
                  type: string
                type: array
                x-kubernetes-list-type: set
              status:
                description: A concise indication of whether the AdminPolicyBasedRoute
                  resource is applied with success
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: egressservices.k8s.ovn.org
spec:
  group: k8s.ovn.org
  names:
    kind: EgressService
    listKind: EgressServiceList
    plural: egressservices
    singular: egressservice
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.host
      name: Assigned Host
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: |-
          EgressService is a CRD that allows the user to request that the source
          IP of egress packets originating from all of the pods that are endpoints
          of the corresponding LoadBalancer Service would be its ingress IP.
          In addition, it allows the user to request that egress packets originating from
          all of the pods that are endpoints of the LoadBalancer service would use a different
          network than the main one.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: EgressServiceSpec defines the desired state of EgressService
            properties:
              network:
                description: |-
                  The network which this service should send egress and corresponding ingress replies to.
                  This is typically implemented as VRF mapping, representing a numeric id or string name
                  of a routing table which by omission uses the default host routing.
                type: string
              nodeSelector:
                description: |-
                  Allows limiting the nodes that can be selected to handle the service's traffic when sourceIPBy=LoadBalancerIP.
                  When present only a node whose labels match the specified selectors can be selected
                  for handling the service's traffic.
                  When it is not specified any node in the cluster can be chosen to manage the service's traffic.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              sourceIPBy:
                description: |-
                  Determines the source IP of egress traffic originating from the pods backing the LoadBalancer Service.
                  When `LoadBalancerIP` the source IP is set to its LoadBalancer ingress IP.
                  When `Network` the source IP is set according to the interface of the Network,
                  leveraging the masquerade rules that are already in place.
                  Typically these rules specify SNAT to the IP of the outgoing interface,
                  which means the packet will typically leave with the IP of the node.
                enum:
                - LoadBalancerIP
                - Network
                type: string
            type: object
          status:
            description: EgressServiceStatus defines the observed state of EgressService
            properties:
              host:
                description: |-
                  The name of the node selected to handle the service's traffic.
                  In case sourceIPBy=Network the field will be set to "ALL".
                type: string
            required:
            - host
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
{{- if .OVN_ADMIN_NETWORK_POLICY_ENABLE }}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/network-policy-api/pull/30
    policy.networking.k8s.io/bundle-version: v0.1.5
    policy.networking.k8s.io/channel: experimental
  creationTimestamp: null
  name: adminnetworkpolicies.policy.networking.k8s.io
spec:
  group: policy.networking.k8s.io
  names:
    kind: AdminNetworkPolicy
    listKind: AdminNetworkPolicyList
    plural: adminnetworkpolicies
    shortNames:
    - anp
    singular: adminnetworkpolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.priority
      name: Priority
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          AdminNetworkPolicy is  a cluster level resource that is part of the
          AdminNetworkPolicy API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Specification of the desired behavior of AdminNetworkPolicy.
            properties:
              egress:
                description: |-
                  Egress is the list of Egress rules to be applied to the selected pods.
                  A total of 100 rules will be allowed in each ANP instance.
                  The relative precedence of egress rules within a single ANP object (all of
                  which share the priority) will be determined by the order in which the rule
                  is written. Thus, a rule that appears at the top of the egress rules
                  would take the highest precedence.
                  ANPs with no egress rules do not affect egress traffic.


                  Support: Core
                items:
                  description: |-
                    AdminNetworkPolicyEgressRule describes an action to take on a particular
                    set of traffic originating from pods selected by a AdminNetworkPolicy's
                    Subject field.
                    <network-policy-api:experimental:validation>
                  properties:
                    action:
                      description: |-
                        Action specifies the effect this rule will have on matching traffic.
                        Currently the following actions are supported:
                        Allow: allows the selected traffic (even if it would otherwise have been denied by NetworkPolicy)
                        Deny: denies the selected traffic
                        Pass: instructs the selected traffic to skip any remaining ANP rules, and
                        then pass execution to any NetworkPolicies that select the pod.
                        If the pod is not selected by any NetworkPolicies then execution
                        is passed to any BaselineAdminNetworkPolicies that select the pod.


                        Support: Core
                      enum:
                      - Allow
                      - Deny
                      - Pass
                      type: string
                    name:
                      description: |-
                        Name is an identifier for this rule, that may be no more than 100 characters
                        in length. This field should be used by the implementation to help
                        improve observability, readability and error-reporting for any applied
                        AdminNetworkPolicies.


                        Support: Core
                      maxLength: 100
                      type: string
                    ports:
                      description: |-
                        Ports allows for matching traffic based on port and protocols.
                        This field is a list of destination ports for the outgoing egress traffic.
                        If Ports is not set then the rule does not filter traffic via port.


                        Support: Core
                      items:
                        description: |-
                          AdminNetworkPolicyPort describes how to select network ports on pod(s).
                          Exactly one field must be set.
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          namedPort:
                            description: |-
                              NamedPort selects a port on a pod(s) based on name.


                              Support: Extended


                              <network-policy-api:experimental>
                            type: string
                          portNumber:
                            description: |-
                              Port selects a port on a pod(s) based on number.


                              Support: Core
                            properties:
                              port:
                                description: |-
                                  Number defines a network port value.


                                  Support: Core
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              protocol:
                                default: TCP
                                description: |-
                                  Protocol is the network protocol (TCP, UDP, or SCTP) which traffic must
                                  match. If not specified, this field defaults to TCP.


                                  Support: Core
                                type: string
                            required:
                            - port
                            - protocol
                            type: object
                          portRange:
                            description: |-
                              PortRange selects a port range on a pod(s) based on provided start and end
                              values.


                              Support: Core
                            properties:
                              end:
                                description: |-
                                  End defines a network port that is the end of a port range, the End value
                                  must be greater than Start.


                                  Support: Core
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              protocol:
                                default: TCP
                                description: |-
                                  Protocol is the network protocol (TCP, UDP, or SCTP) which traffic must
                                  match. If not specified, this field defaults to TCP.


                                  Support: Core
                                type: string
                              start:
                                description: |-
                                  Start defines a network port that is the start of a port range, the Start
                                  value must be less than End.


                                  Support: Core
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                            required:
                            - end
                            - start
                            type: object
                        type: object
                      maxItems: 100
                      type: array
                    to:
                      description: |-
                        To is the List of destinations whose traffic this rule applies to.
                        If any AdminNetworkPolicyEgressPeer matches the destination of outgoing
                        traffic then the specified action is applied.
                        This field must be defined and contain at least one item.


                        Support: Core
                      items:
                        description: |-
                          AdminNetworkPolicyEgressPeer defines a peer to allow traffic to.
                          Exactly one of the selector pointers must be set for a given peer. If a
                          consumer observes none of its fields are set, they must assume an unknown
                          option has been specified and fail closed.
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          namespaces:
                            description: |-
                              Namespaces defines a way to select all pods within a set of Namespaces.
                              Note that host-networked pods are not included in this type of peer.


                              Support: Core
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: |-
                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        operator represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: |-
                                        values is an array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                          networks:
                            description: |-
                              Networks defines a way to select peers via CIDR blocks.
                              This is intended for representing entities that live outside the cluster,
                              which can't be selected by pods, namespaces and nodes peers, but note
                              that cluster-internal traffic will be checked against the rule as
                              well. So if you Allow or Deny traffic to `"0.0.0.0/0"`, that will allow
                              or deny all IPv4 pod-to-pod traffic as well. If you don't want that,
                              add a rule that Passes all pod traffic before the Networks rule.


                              Each item in Networks should be provided in the CIDR format and should be
                              IPv4 or IPv6, for example "10.0.0.0/8" or "fd00::/8".


                              Networks can have upto 25 CIDRs specified.


                              Support: Extended


                              <network-policy-api:experimental>
                            items:
                              description: CIDR is an IP address range in CIDR notation
                                (for example, "10.0.0.0/8" or "fd00::/8").
                              maxLength: 43
                              type: string
                              x-kubernetes-validations:
                              - message: Invalid CIDR format provided
                                rule: isCIDR(self)
                              - message: CIDR must be either an IPv4 or IPv6 address.
                                  IPv4 address embedded in IPv6 addresses are not
                                  supported
                                rule: self.contains(':') != self.contains('.')
                            maxItems: 25
                            minItems: 1
                            type: array
                            x-kubernetes-list-type: set
                          nodes:
                            description: |-
                              Nodes defines a way to select a set of nodes in
                              the cluster. This field follows standard label selector
                              semantics; if present but empty, it selects all Nodes.


                              Support: Extended


                              <network-policy-api:experimental>
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: |-
                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        operator represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: |-
                                        values is an array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                          pods:
                            description: |-
                              Pods defines a way to select a set of pods in
                              a set of namespaces. Note that host-networked pods
                              are not included in this type of peer.


                              Support: Core
                            properties:
                              namespaceSelector:
                                description: |-
                                  NamespaceSelector follows standard label selector semantics; if empty,
                                  it selects all Namespaces.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: |-
                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                        relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            operator represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: |-
                                            values is an array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array is replaced during a strategic
                                            merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              podSelector:
                                description: |-
                                  PodSelector is used to explicitly select pods within a namespace; if empty,
                                  it selects all Pods.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: |-
                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                        relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            operator represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: |-
                                            values is an array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array is replaced during a strategic
                                            merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            required:
                            - namespaceSelector
                            - podSelector
                            type: object
                        type: object
                      maxItems: 100
                      minItems: 1
                      type: array
                  required:
                  - action
                  - to
                  type: object
                  x-kubernetes-validations:
                  - message: networks/nodes peer cannot be set with namedPorts since
                      there are no namedPorts for networks/nodes
                    rule: '!(self.to.exists(peer, has(peer.networks) || has(peer.nodes))
                      && has(self.ports) && self.ports.exists(port, has(port.namedPort)))'
                maxItems: 100
                type: array
              ingress:
                description: |-
                  Ingress is the list of Ingress rules to be applied to the selected pods.
                  A total of 100 rules will be allowed in each ANP instance.
                  The relative precedence of ingress rules within a single ANP object (all of
                  which share the priority) will be determined by the order in which the rule
                  is written. Thus, a rule that appears at the top of the ingress rules
                  would take the highest precedence.
                  ANPs with no ingress rules do not affect ingress traffic.


                  Support: Core
                items:
                  description: |-
                    AdminNetworkPolicyIngressRule describes an action to take on a particular
                    set of traffic destined for pods selected by an AdminNetworkPolicy's
                    Subject field.
                  properties:
                    action:
                      description: |-
                        Action specifies the effect this rule will have on matching traffic.
                        Currently the following actions are supported:
                        Allow: allows the selected traffic (even if it would otherwise have been denied by NetworkPolicy)
                        Deny: denies the selected traffic
                        Pass: instructs the selected traffic to skip any remaining ANP rules, and
                        then pass execution to any NetworkPolicies that select the pod.
                        If the pod is not selected by any NetworkPolicies then execution
                        is passed to any BaselineAdminNetworkPolicies that select the pod.


                        Support: Core
                      enum:
                      - Allow
                      - Deny
                      - Pass
                      type: string
                    from:
                      description: |-
                        From is the list of sources whose traffic this rule applies to.
                        If any AdminNetworkPolicyIngressPeer matches the source of incoming
                        traffic then the specified action is applied.
                        This field must be defined and contain at least one item.


                        Support: Core
                      items:
                        description: |-
                          AdminNetworkPolicyIngressPeer defines an in-cluster peer to allow traffic from.
                          Exactly one of the selector pointers must be set for a given peer. If a
                          consumer observes none of its fields are set, they must assume an unknown
                          option has been specified and fail closed.
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          namespaces:
                            description: |-
                              Namespaces defines a way to select all pods within a set of Namespaces.
                              Note that host-networked pods are not included in this type of peer.


                              Support: Core
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: |-
                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        operator represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: |-
                                        values is an array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                          pods:
                            description: |-
                              Pods defines a way to select a set of pods in
                              a set of namespaces. Note that host-networked pods
                              are not included in this type of peer.


                              Support: Core
                            properties:
                              namespaceSelector:
                                description: |-
                                  NamespaceSelector follows standard label selector semantics; if empty,
                                  it selects all Namespaces.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: |-
                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                        relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            operator represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: |-
                                            values is an array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array is replaced during a strategic
                                            merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              podSelector:
                                description: |-
                                  PodSelector is used to explicitly select pods within a namespace; if empty,
                                  it selects all Pods.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: |-
                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                        relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            operator represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: |-
                                            values is an array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array is replaced during a strategic
                                            merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            required:
                            - namespaceSelector
                            - podSelector
                            type: object
                        type: object
                      maxItems: 100
                      minItems: 1
                      type: array
                    name:
                      description: |-
                        Name is an identifier for this rule, that may be no more than 100 characters
                        in length. This field should be used by the implementation to help
                        improve observability, readability and error-reporting for any applied
                        AdminNetworkPolicies.


                        Support: Core
                      maxLength: 100
                      type: string
                    ports:
                      description: |-
                        Ports allows for matching traffic based on port and protocols.
                        This field is a list of ports which should be matched on
                        the pods selected for this policy i.e the subject of the policy.
                        So it matches on the destination port for the ingress traffic.
                        If Ports is not set then the rule does not filter traffic via port.


                        Support: Core
                      items:
                        description: |-
                          AdminNetworkPolicyPort describes how to select network ports on pod(s).
                          Exactly one field must be set.
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          namedPort:
                            description: |-
                              NamedPort selects a port on a pod(s) based on name.


                              Support: Extended


                              <network-policy-api:experimental>
                            type: string
                          portNumber:
                            description: |-
                              Port selects a port on a pod(s) based on number.


                              Support: Core
                            properties:
                              port:
                                description: |-
                                  Number defines a network port value.


                                  Support: Core
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              protocol:
                                default: TCP
                                description: |-
                                  Protocol is the network protocol (TCP, UDP, or SCTP) which traffic must
                                  match. If not specified, this field defaults to TCP.


                                  Support: Core
                                type: string
                            required:
                            - port
                            - protocol
                            type: object
                          portRange:
                            description: |-
                              PortRange selects a port range on a pod(s) based on provided start and end
                              values.


                              Support: Core
                            properties:
                              end:
                                description: |-
                                  End defines a network port that is the end of a port range, the End value
                                  must be greater than Start.


                                  Support: Core
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              protocol:
                                default: TCP
                                description: |-
                                  Protocol is the network protocol (TCP, UDP, or SCTP) which traffic must
                                  match. If not specified, this field defaults to TCP.


                                  Support: Core
                                type: string
                              start:
                                description: |-
                                  Start defines a network port that is the start of a port range, the Start
                                  value must be less than End.


                                  Support: Core
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                            required:
                            - end
                            - start
                            type: object
                        type: object
                      maxItems: 100
                      type: array
                  required:
                  - action
                  - from
                  type: object
                maxItems: 100
                type: array
              priority:
                description: |-
                  Priority is a value from 0 to 1000. Rules with lower priority values have
                  higher precedence, and are checked before rules with higher priority values.
                  All AdminNetworkPolicy rules have higher precedence than NetworkPolicy or
                  BaselineAdminNetworkPolicy rules
                  The behavior is undefined if two ANP objects have same priority.


                  Support: Core
                format: int32
                maximum: 1000
                minimum: 0
                type: integer
              subject:
                description: |-
                  Subject defines the pods to which this AdminNetworkPolicy applies.
                  Note that host-networked pods are not included in subject selection.


                  Support: Core
                maxProperties: 1
                minProperties: 1
                properties:
                  namespaces:
                    description: Namespaces is used to select pods via namespace selectors.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  pods:
                    description: Pods is used to select pods via namespace AND pod
                      selectors.
                    properties:
                      namespaceSelector:
                        description: |-
                          NamespaceSelector follows standard label selector semantics; if empty,
                          it selects all Namespaces.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: |-
                                A label selector requirement is a selector that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: |-
                                    operator represents a key's relationship to a set of values.
                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: |-
                                    values is an array of string values. If the operator is In or NotIn,
                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                    the values array must be empty. This array is replaced during a strategic
                                    merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      podSelector:
                        description: |-
                          PodSelector is used to explicitly select pods within a namespace; if empty,
                          it selects all Pods.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: |-
                                A label selector requirement is a selector that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: |-
                                    operator represents a key's relationship to a set of values.
                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: |-
                                    values is an array of string values. If the operator is In or NotIn,
                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                    the values array must be empty. This array is replaced during a strategic
                                    merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - namespaceSelector
                    - podSelector
                    type: object
                type: object
            required:
            - priority
            - subject
            type: object
          status:
            description: Status is the status to be reported by the implementation.
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            required:
            - conditions
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/network-policy-api/pull/30
    policy.networking.k8s.io/bundle-version: v0.1.5
    policy.networking.k8s.io/channel: experimental
  creationTimestamp: null
  name: baselineadminnetworkpolicies.policy.networking.k8s.io
spec:
  group: policy.networking.k8s.io
  names:
    kind: BaselineAdminNetworkPolicy
    listKind: BaselineAdminNetworkPolicyList
    plural: baselineadminnetworkpolicies
    shortNames:
    - banp
    singular: baselineadminnetworkpolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          BaselineAdminNetworkPolicy is a cluster level resource that is part of the
          AdminNetworkPolicy API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Specification of the desired behavior of BaselineAdminNetworkPolicy.
            properties:
              egress:
                description: |-
                  Egress is the list of Egress rules to be applied to the selected pods if
                  they are not matched by any AdminNetworkPolicy or NetworkPolicy rules.
                  A total of 100 Egress rules will be allowed in each BANP instance.
                  The relative precedence of egress rules within a single BANP object
                  will be determined by the order in which the rule is written.
                  Thus, a rule that appears at the top of the egress rules
                  would take the highest precedence.
                  BANPs with no egress rules do not affect egress traffic.


                  Support: Core
                items:
                  description: |-
                    BaselineAdminNetworkPolicyEgressRule describes an action to take on a particular
                    set of traffic originating from pods selected by a BaselineAdminNetworkPolicy's
                    Subject field.
                    <network-policy-api:experimental:validation>
                  properties:
                    action:
                      description: |-
                        Action specifies the effect this rule will have on matching traffic.
                        Currently the following actions are supported:
                        Allow: allows the selected traffic
                        Deny: denies the selected traffic


                        Support: Core
                      enum:
                      - Allow
                      - Deny
                      type: string
                    name:
                      description: |-
                        Name is an identifier for this rule, that may be no more than 100 characters
                        in length. This field should be used by the implementation to help
                        improve observability, readability and error-reporting for any applied
                        BaselineAdminNetworkPolicies.


                        Support: Core
                      maxLength: 100
                      type: string
                    ports:
                      description: |-
                        Ports allows for matching traffic based on port and protocols.
                        This field is a list of destination ports for the outgoing egress traffic.
                        If Ports is not set then the rule does not filter traffic via port.
                      items:
                        description: |-
                          AdminNetworkPolicyPort describes how to select network ports on pod(s).
                          Exactly one field must be set.
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          namedPort:
                            description: |-
                              NamedPort selects a port on a pod(s) based on name.


                              Support: Extended


                              <network-policy-api:experimental>
                            type: string
                          portNumber:
                            description: |-
                              Port selects a port on a pod(s) based on number.


                              Support: Core
                            properties:
                              port:
                                description: |-
                                  Number defines a network port value.


                                  Support: Core
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              protocol:
                                default: TCP
                                description: |-
                                  Protocol is the network protocol (TCP, UDP, or SCTP) which traffic must
                                  match. If not specified, this field defaults to TCP.


                                  Support: Core
                                type: string
                            required:
                            - port
                            - protocol
                            type: object
                          portRange:
                            description: |-
                              PortRange selects a port range on a pod(s) based on provided start and end
                              values.


                              Support: Core
                            properties:
                              end:
                                description: |-
                                  End defines a network port that is the end of a port range, the End value
                                  must be greater than Start.


                                  Support: Core
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              protocol:
                                default: TCP
                                description: |-
                                  Protocol is the network protocol (TCP, UDP, or SCTP) which traffic must
                                  match. If not specified, this field defaults to TCP.


                                  Support: Core
                                type: string
                              start:
                                description: |-
                                  Start defines a network port that is the start of a port range, the Start
                                  value must be less than End.


                                  Support: Core
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                            required:
                            - end
                            - start
                            type: object
                        type: object
                      maxItems: 100
                      type: array
                    to:
                      description: |-
                        To is the list of destinations whose traffic this rule applies to.
                        If any AdminNetworkPolicyEgressPeer matches the destination of outgoing
                        traffic then the specified action is applied.
                        This field must be defined and contain at least one item.


                        Support: Core
                      items:
                        description: |-
                          AdminNetworkPolicyEgressPeer defines a peer to allow traffic to.
                          Exactly one of the selector pointers must be set for a given peer. If a
                          consumer observes none of its fields are set, they must assume an unknown
                          option has been specified and fail closed.
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          namespaces:
                            description: |-
                              Namespaces defines a way to select all pods within a set of Namespaces.
                              Note that host-networked pods are not included in this type of peer.


                              Support: Core
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: |-
                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        operator represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: |-
                                        values is an array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                          networks:
                            description: |-
                              Networks defines a way to select peers via CIDR blocks.
                              This is intended for representing entities that live outside the cluster,
                              which can't be selected by pods, namespaces and nodes peers, but note
                              that cluster-internal traffic will be checked against the rule as
                              well. So if you Allow or Deny traffic to `"0.0.0.0/0"`, that will allow
                              or deny all IPv4 pod-to-pod traffic as well. If you don't want that,
                              add a rule that Passes all pod traffic before the Networks rule.


                              Each item in Networks should be provided in the CIDR format and should be
                              IPv4 or IPv6, for example "10.0.0.0/8" or "fd00::/8".


                              Networks can have upto 25 CIDRs specified.


                              Support: Extended


                              <network-policy-api:experimental>
                            items:
                              description: CIDR is an IP address range in CIDR notation
                                (for example, "10.0.0.0/8" or "fd00::/8").
                              maxLength: 43
                              type: string
                              x-kubernetes-validations:
                              - message: Invalid CIDR format provided
                                rule: isCIDR(self)
                              - message: CIDR must be either an IPv4 or IPv6 address.
                                  IPv4 address embedded in IPv6 addresses are not
                                  supported
                                rule: self.contains(':') != self.contains('.')
                            maxItems: 25
                            minItems: 1
                            type: array
                            x-kubernetes-list-type: set
                          nodes:
                            description: |-
                              Nodes defines a way to select a set of nodes in
                              the cluster. This field follows standard label selector
                              semantics; if present but empty, it selects all Nodes.


                              Support: Extended


                              <network-policy-api:experimental>
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: |-
                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        operator represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: |-
                                        values is an array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                          pods:
                            description: |-
                              Pods defines a way to select a set of pods in
                              a set of namespaces. Note that host-networked pods
                              are not included in this type of peer.


                              Support: Core
                            properties:
                              namespaceSelector:
                                description: |-
                                  NamespaceSelector follows standard label selector semantics; if empty,
                                  it selects all Namespaces.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: |-
                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                        relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            operator represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: |-
                                            values is an array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array is replaced during a strategic
                                            merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              podSelector:
                                description: |-
                                  PodSelector is used to explicitly select pods within a namespace; if empty,
                                  it selects all Pods.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: |-
                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                        relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            operator represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: |-
                                            values is an array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array is replaced during a strategic
                                            merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            required:
                            - namespaceSelector
                            - podSelector
                            type: object
                        type: object
                      maxItems: 100
                      minItems: 1
                      type: array
                  required:
                  - action
                  - to
                  type: object
                  x-kubernetes-validations:
                  - message: networks/nodes peer cannot be set with namedPorts since
                      there are no namedPorts for networks/nodes
                    rule: '!(self.to.exists(peer, has(peer.networks) || has(peer.nodes))
                      && has(self.ports) && self.ports.exists(port, has(port.namedPort)))'
                maxItems: 100
                type: array
              ingress:
                description: |-
                  Ingress is the list of Ingress rules to be applied to the selected pods
                  if they are not matched by any AdminNetworkPolicy or NetworkPolicy rules.
                  A total of 100 Ingress rules will be allowed in each BANP instance.
                  The relative precedence of ingress rules within a single BANP object
                  will be determined by the order in which the rule is written.
                  Thus, a rule that appears at the top of the ingress rules
                  would take the highest precedence.
                  BANPs with no ingress rules do not affect ingress traffic.


                  Support: Core
                items:
                  description: |-
                    BaselineAdminNetworkPolicyIngressRule describes an action to take on a particular
                    set of traffic destined for pods selected by a BaselineAdminNetworkPolicy's
                    Subject field.
                  properties:
                    action:
                      description: |-
                        Action specifies the effect this rule will have on matching traffic.
                        Currently the following actions are supported:
                        Allow: allows the selected traffic
                        Deny: denies the selected traffic


                        Support: Core
                      enum:
                      - Allow
                      - Deny
                      type: string
                    from:
                      description: |-
                        From is the list of sources whose traffic this rule applies to.
                        If any AdminNetworkPolicyIngressPeer matches the source of incoming
                        traffic then the specified action is applied.
                        This field must be defined and contain at least one item.


                        Support: Core
                      items:
                        description: |-
                          AdminNetworkPolicyIngressPeer defines an in-cluster peer to allow traffic from.
                          Exactly one of the selector pointers must be set for a given peer. If a
                          consumer observes none of its fields are set, they must assume an unknown
                          option has been specified and fail closed.
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          namespaces:
                            description: |-
                              Namespaces defines a way to select all pods within a set of Namespaces.
                              Note that host-networked pods are not included in this type of peer.


                              Support: Core
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: |-
                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        operator represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: |-
                                        values is an array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                          pods:
                            description: |-
                              Pods defines a way to select a set of pods in
                              a set of namespaces. Note that host-networked pods
                              are not included in this type of peer.


                              Support: Core
                            properties:
                              namespaceSelector:
                                description: |-
                                  NamespaceSelector follows standard label selector semantics; if empty,
                                  it selects all Namespaces.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: |-
                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                        relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            operator represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: |-
                                            values is an array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array is replaced during a strategic
                                            merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              podSelector:
                                description: |-
                                  PodSelector is used to explicitly select pods within a namespace; if empty,
                                  it selects all Pods.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: |-
                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                        relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            operator represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: |-
                                            values is an array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array is replaced during a strategic
                                            merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            required:
                            - namespaceSelector
                            - podSelector
                            type: object
                        type: object
                      maxItems: 100
                      minItems: 1
                      type: array
                    name:
                      description: |-
                        Name is an identifier for this rule, that may be no more than 100 characters
                        in length. This field should be used by the implementation to help
                        improve observability, readability and error-reporting for any applied
                        BaselineAdminNetworkPolicies.


                        Support: Core
                      maxLength: 100
                      type: string
                    ports:
                      description: |-
                        Ports allows for matching traffic based on port and protocols.
                        This field is a list of ports which should be matched on
                        the pods selected for this policy i.e the subject of the policy.
                        So it matches on the destination port for the ingress traffic.
                        If Ports is not set then the rule does not filter traffic via port.


                        Support: Core
                      items:
                        description: |-
                          AdminNetworkPolicyPort describes how to select network ports on pod(s).
                          Exactly one field must be set.
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          namedPort:
                            description: |-
                              NamedPort selects a port on a pod(s) based on name.


                              Support: Extended


                              <network-policy-api:experimental>
                            type: string
                          portNumber:
                            description: |-
                              Port selects a port on a pod(s) based on number.


                              Support: Core
                            properties:
                              port:
                                description: |-
                                  Number defines a network port value.


                                  Support: Core
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              protocol:
                                default: TCP
                                description: |-
                                  Protocol is the network protocol (TCP, UDP, or SCTP) which traffic must
                                  match. If not specified, this field defaults to TCP.


                                  Support: Core
                                type: string
                            required:
                            - port
                            - protocol
                            type: object
                          portRange:
                            description: |-
                              PortRange selects a port range on a pod(s) based on provided start and end
                              values.


                              Support: Core
                            properties:
                              end:
                                description: |-
                                  End defines a network port that is the end of a port range, the End value
                                  must be greater than Start.


                                  Support: Core
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              protocol:
                                default: TCP
                                description: |-
                                  Protocol is the network protocol (TCP, UDP, or SCTP) which traffic must
                                  match. If not specified, this field defaults to TCP.


                                  Support: Core
                                type: string
                              start:
                                description: |-
                                  Start defines a network port that is the start of a port range, the Start
                                  value must be less than End.


                                  Support: Core
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                            required:
                            - end
                            - start
                            type: object
                        type: object
                      maxItems: 100
                      type: array
                  required:
                  - action
                  - from
                  type: object
                maxItems: 100
                type: array
              subject:
                description: |-
                  Subject defines the pods to which this BaselineAdminNetworkPolicy applies.
                  Note that host-networked pods are not included in subject selection.


                  Support: Core
                maxProperties: 1
                minProperties: 1
                properties:
                  namespaces:
                    description: Namespaces is used to select pods via namespace selectors.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  pods:
                    description: Pods is used to select pods via namespace AND pod
                      selectors.
                    properties:
                      namespaceSelector:
                        description: |-
                          NamespaceSelector follows standard label selector semantics; if empty,
                          it selects all Namespaces.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: |-
                                A label selector requirement is a selector that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: |-
                                    operator represents a key's relationship to a set of values.
                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: |-
                                    values is an array of string values. If the operator is In or NotIn,
                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                    the values array must be empty. This array is replaced during a strategic
                                    merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      podSelector:
                        description: |-
                          PodSelector is used to explicitly select pods within a namespace; if empty,
                          it selects all Pods.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: |-
                                A label selector requirement is a selector that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: |-
                                    operator represents a key's relationship to a set of values.
                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: |-
                                    values is an array of string values. If the operator is In or NotIn,
                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                    the values array must be empty. This array is replaced during a strategic
                                    merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - namespaceSelector
                    - podSelector
                    type: object
                type: object
            required:
            - subject
            type: object
          status:
            description: Status is the status to be reported by the implementation.
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            required:
            - conditions
            type: object
        required:
        - metadata
        - spec
        type: object
        x-kubernetes-validations:
        - message: Only one baseline admin network policy with metadata.name="default"
            can be created in the cluster
          rule: self.metadata.name == 'default'
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
{{- end }}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.5
  name: ipamclaims.k8s.cni.cncf.io
spec:
  group: k8s.cni.cncf.io
  names:
    kind: IPAMClaim
    listKind: IPAMClaimList
    plural: ipamclaims
    singular: ipamclaim
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: IPAMClaim is the Schema for the IPAMClaim API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              properties:
                interface:
                  description: The pod interface name for which this allocation was
                    created
                  type: string
                network:
                  description: The network name for which this persistent allocation
                    was created
                  type: string
              required:
                - interface
                - network
              type: object
            status:
              description: IPAMClaimStatus contains the observed status of the IPAMClaim.
              properties:
{{- if .OVN_PRE_CONF_UDN_ADDR_ENABLE }}
                conditions:
                  description: Conditions contains details for one aspect of the current
                    state of this API Resource
                  items:
                    description: Condition contains details for one aspect of the current
                      state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
{{- end }}
                ips:
                  description: The list of IP addresses (v4, v6) that were allocated
                    for the pod interface
                  items:
                    type: string
                  type: array
{{- if .OVN_PRE_CONF_UDN_ADDR_ENABLE }}
                ownerPod:
                  description: The name of the pod holding the IPAMClaim
                  properties:
                    name:
                      type: string
                  type: object
{{- end }}
              required:
                - ips
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
{{- if .OVN_NETWORK_SEGMENTATION_ENABLE }}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: userdefinednetworks.k8s.ovn.org
spec:
  group: k8s.ovn.org
  names:
    kind: UserDefinedNetwork
    listKind: UserDefinedNetworkList
    plural: userdefinednetworks
    singular: userdefinednetwork
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: UserDefinedNetwork describe network request for a Namespace.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: UserDefinedNetworkSpec defines the desired state of UserDefinedNetworkSpec.
            properties:
              layer2:
                description: Layer2 is the Layer2 topology configuration.
                properties:
{{- if .OVN_PRE_CONF_UDN_ADDR_ENABLE }}
                  defaultGatewayIPs:
                    description: |-
                      defaultGatewayIPs specifies the default gateway IP used in the internal OVN topology.

                      Dual-stack clusters may set 2 IPs (one for each IP family), otherwise only 1 IP is allowed.
                      This field is only allowed for "Primary" network.
                      It is not recommended to set this field without explicit need and understanding of the OVN network topology.
                      When omitted, an IP from the subnets field is used.
                    items:
                      type: string
                      x-kubernetes-validations:
                      - message: IP is invalid
                        rule: isIP(self)
                    maxItems: 2
                    minItems: 1
                    type: array
                    x-kubernetes-validations:
                    - message: When 2 IPs are set, they must be from different IP
                        families
                      rule: size(self) != 2 || !isIP(self[0]) || !isIP(self[1]) ||
                        ip(self[0]).family() != ip(self[1]).family()
                  infrastructureSubnets:
                    description: |-
                      infrastructureSubnets specifies a list of internal CIDR ranges that OVN-Kubernetes will reserve for internal network infrastructure.
                      Any IP addresses within these ranges cannot be assigned to workloads.
                      When omitted, OVN-Kubernetes will automatically allocate IP addresses from `subnets` for its infrastructure needs.
                      When there are not enough available IPs in the provided infrastructureSubnets, OVN-Kubernetes will automatically allocate IP addresses from subnets for its infrastructure needs.
                      When `reservedSubnets` is also specified the CIDRs cannot overlap.
                      When `defaultGatewayIPs` is also specified, the default gateway IPs must belong to one of the infrastructure subnet CIDRs.
                      Each item should be in range of the specified CIDR(s) in `subnets`.
                      The maximum number of entries allowed is 4.
                      The format should match standard CIDR notation (for example, "10.128.0.0/16").
                      This field must be omitted if `subnets` is unset or `ipam.mode` is `Disabled`.
                    items:
                      maxLength: 43
                      type: string
                      x-kubernetes-validations:
                      - message: CIDR is invalid
                        rule: isCIDR(self)
                    maxItems: 4
                    minItems: 1
                    type: array
{{- end }}
                  ipam:
                    description: IPAM section contains IPAM-related configuration
                      for the network.
                    minProperties: 1
                    properties:
                      lifecycle:
                        description: |-
                          Lifecycle controls IP addresses management lifecycle.

                          The only allowed value is Persistent. When set, OVN Kubernetes assigned IP addresses will be persisted in an
                          `ipamclaims.k8s.cni.cncf.io` object. These IP addresses will be reused by other pods if requested.
                          Only supported when mode is `Enabled`.
                        enum:
                        - Persistent
                        type: string
                      mode:
                        description: |-
                          Mode controls how much of the IP configuration will be managed by OVN.
                          `Enabled` means OVN-Kubernetes will apply IP configuration to the SDN infrastructure and it will also assign IPs
                          from the selected subnet to the individual pods.
                          `Disabled` means OVN-Kubernetes will only assign MAC addresses and provide layer 2 communication, letting users
                          configure IP addresses for the pods.
                          `Disabled` is only available for Secondary networks.
                          By disabling IPAM, any Kubernetes features that rely on selecting pods by IP will no longer function
                          (such as network policy, services, etc). Additionally, IP port security will also be disabled for interfaces attached to this network.
                          Defaults to `Enabled`.
                        enum:
                        - Enabled
                        - Disabled
                        type: string
                    type: object
                    x-kubernetes-validations:
                    - message: lifecycle Persistent is only supported when ipam.mode
                        is Enabled
                      rule: '!has(self.lifecycle) || self.lifecycle != ''Persistent''
                        || !has(self.mode) || self.mode == ''Enabled'''
                  joinSubnets:
                    description: |-
                      JoinSubnets are used inside the OVN network topology.

                      Dual-stack clusters may set 2 subnets (one for each IP family), otherwise only 1 subnet is allowed.
                      This field is only allowed for "Primary" network.
                      It is not recommended to set this field without explicit need and understanding of the OVN network topology.
                      When omitted, the platform will choose a reasonable default which is subject to change over time.
                    items:
                      maxLength: 43
                      type: string
                      x-kubernetes-validations:
                      - message: CIDR is invalid
                        rule: isCIDR(self)
                    maxItems: 2
                    minItems: 1
                    type: array
                    x-kubernetes-validations:
                    - message: When 2 CIDRs are set, they must be from different IP
                        families
                      rule: size(self) != 2 || !isCIDR(self[0]) || !isCIDR(self[1])
                        || cidr(self[0]).ip().family() != cidr(self[1]).ip().family()
                  mtu:
                    description: |-
                      MTU is the maximum transmission unit for a network.
                      MTU is optional, if not provided, the globally configured value in OVN-Kubernetes (defaults to 1400) is used for the network.
                    format: int32
                    maximum: 65536
                    minimum: 576
                    type: integer
{{- if .OVN_PRE_CONF_UDN_ADDR_ENABLE }}
                  reservedSubnets:
                    description: |-
                      reservedSubnets specifies a list of CIDRs reserved for static IP assignment, excluded from automatic allocation.
                      reservedSubnets is optional. When omitted, all IP addresses in `subnets` are available for automatic assignment.
                      IPs from these ranges can still be requested through static IP assignment.
                      Each item should be in range of the specified CIDR(s) in `subnets`.
                      The maximum number of entries allowed is 25.
                      The format should match standard CIDR notation (for example, "10.128.0.0/16").
                      This field must be omitted if `subnets` is unset or `ipam.mode` is `Disabled`.
                    items:
                      maxLength: 43
                      type: string
                      x-kubernetes-validations:
                      - message: CIDR is invalid
                        rule: isCIDR(self)
                    maxItems: 25
                    minItems: 1
                    type: array
{{- end }}
                  role:
                    description: |-
                      Role describes the network role in the pod.

                      Allowed value is "Secondary".
                      Secondary network is only assigned to pods that use `k8s.v1.cni.cncf.io/networks` annotation to select given network.
                    enum:
                    - Primary
                    - Secondary
                    type: string
                  subnets:
                    description: |-
                      Subnets are used for the pod network across the cluster.
                      Dual-stack clusters may set 2 subnets (one for each IP family), otherwise only 1 subnet is allowed.

                      The format should match standard CIDR notation (for example, "10.128.0.0/16").
                      This field must be omitted if `ipam.mode` is `Disabled`.
                    items:
                      maxLength: 43
                      type: string
                      x-kubernetes-validations:
                      - message: CIDR is invalid
                        rule: isCIDR(self)
                    maxItems: 2
                    minItems: 1
                    type: array
                    x-kubernetes-validations:
                    - message: When 2 CIDRs are set, they must be from different IP
                        families
                      rule: size(self) != 2 || !isCIDR(self[0]) || !isCIDR(self[1])
                        || cidr(self[0]).ip().family() != cidr(self[1]).ip().family()
                required:
                - role
                type: object
                x-kubernetes-validations:
                - message: Subnets is required with ipam.mode is Enabled or unset
                  rule: has(self.ipam) && has(self.ipam.mode) && self.ipam.mode !=
                    'Enabled' || has(self.subnets)
                - message: Subnets must be unset when ipam.mode is Disabled
                  rule: '!has(self.ipam) || !has(self.ipam.mode) || self.ipam.mode
                    != ''Disabled'' || !has(self.subnets)'
                - message: Disabled ipam.mode is only supported for Secondary network
                  rule: '!has(self.ipam) || !has(self.ipam.mode) || self.ipam.mode
                    != ''Disabled'' || self.role == ''Secondary'''
                - message: JoinSubnets is only supported for Primary network
                  rule: '!has(self.joinSubnets) || has(self.role) && self.role ==
                    ''Primary'''
                - message: MTU should be greater than or equal to 1280 when IPv6 subent
                    is used
                  rule: '!has(self.subnets) || !has(self.mtu) || !self.subnets.exists_one(i,
                    isCIDR(i) && cidr(i).ip().family() == 6) || self.mtu >= 1280'
{{- if .OVN_PRE_CONF_UDN_ADDR_ENABLE }}
                - message: defaultGatewayIPs is only supported for Primary network
                  rule: '!has(self.defaultGatewayIPs) || has(self.role) && self.role
                    == ''Primary'''
                - message: defaultGatewayIPs must belong to one of the subnets specified
                    in the subnets field
                  rule: '!has(self.defaultGatewayIPs) || self.defaultGatewayIPs.all(ip,
                    self.subnets.exists(subnet, cidr(subnet).containsIP(ip)))'
                - message: defaultGatewayIPs must be specified for all IP families
                  rule: '!has(self.defaultGatewayIPs) || size(self.defaultGatewayIPs)
                    == size(self.subnets)'
                - message: reservedSubnets must be unset when subnets is unset
                  rule: '!has(self.reservedSubnets) || has(self.subnets)'
                - message: reservedSubnets is only supported for Primary network
                  rule: '!has(self.reservedSubnets) || has(self.role) && self.role
                    == ''Primary'''
                - message: infrastructureSubnets must be unset when subnets is unset
                  rule: '!has(self.infrastructureSubnets) || has(self.subnets)'
                - message: infrastructureSubnets is only supported for Primary network
                  rule: '!has(self.infrastructureSubnets) || has(self.role) && self.role
                    == ''Primary'''
                - message: defaultGatewayIPs have to belong to infrastructureSubnets
                  rule: '!has(self.infrastructureSubnets) || !has(self.defaultGatewayIPs)
                    || self.defaultGatewayIPs.all(ip, self.infrastructureSubnets.exists(subnet,
                    cidr(subnet).containsIP(ip)))'
                - fieldPath: .reservedSubnets
                  message: reservedSubnets must be subnetworks of the networks specified
                    in the subnets field
                  rule: '!has(self.reservedSubnets) || self.reservedSubnets.all(e,
                    self.subnets.exists(s, cidr(s).containsCIDR(cidr(e))))'
                - fieldPath: .infrastructureSubnets
                  message: infrastructureSubnets must be subnetworks of the networks
                    specified in the subnets field
                  rule: '!has(self.infrastructureSubnets) || self.infrastructureSubnets.all(e,
                    self.subnets.exists(s, cidr(s).containsCIDR(cidr(e))))'
                - message: infrastructureSubnets and reservedSubnets must not overlap
                  rule: '!has(self.infrastructureSubnets) || !has(self.reservedSubnets)
                    || self.infrastructureSubnets.all(infra, !self.reservedSubnets.exists(reserved,
                    cidr(infra).containsCIDR(reserved) || cidr(reserved).containsCIDR(infra)))'
                - message: infrastructureSubnets must be a masked network address
                    (no host bits set)
                  rule: '!has(self.infrastructureSubnets) || self.infrastructureSubnets.all(s,
                    isCIDR(s) && cidr(s) == cidr(s).masked())'
                - message: reservedSubnets must be a masked network address (no
                    host bits set)
                  rule: '!has(self.reservedSubnets) || self.reservedSubnets.all(s,
                    isCIDR(s) && cidr(s) == cidr(s).masked())'
{{- end }}
              layer3:
                description: Layer3 is the Layer3 topology configuration.
                properties:
                  joinSubnets:
                    description: |-
                      JoinSubnets are used inside the OVN network topology.

                      Dual-stack clusters may set 2 subnets (one for each IP family), otherwise only 1 subnet is allowed.
                      This field is only allowed for "Primary" network.
                      It is not recommended to set this field without explicit need and understanding of the OVN network topology.
                      When omitted, the platform will choose a reasonable default which is subject to change over time.
                    items:
                      maxLength: 43
                      type: string
                      x-kubernetes-validations:
                      - message: CIDR is invalid
                        rule: isCIDR(self)
                    maxItems: 2
                    minItems: 1
                    type: array
                    x-kubernetes-validations:
                    - message: When 2 CIDRs are set, they must be from different IP
                        families
                      rule: size(self) != 2 || !isCIDR(self[0]) || !isCIDR(self[1])
                        || cidr(self[0]).ip().family() != cidr(self[1]).ip().family()
                  mtu:
                    description: |-
                      MTU is the maximum transmission unit for a network.

                      MTU is optional, if not provided, the globally configured value in OVN-Kubernetes (defaults to 1400) is used for the network.
                    format: int32
                    maximum: 65536
                    minimum: 576
                    type: integer
                  role:
                    description: |-
                      Role describes the network role in the pod.

                      Allowed values are "Primary" and "Secondary".
                      Primary network is automatically assigned to every pod created in the same namespace.
                      Secondary network is only assigned to pods that use `k8s.v1.cni.cncf.io/networks` annotation to select given network.
                    enum:
                    - Primary
                    - Secondary
                    type: string
                  subnets:
                    description: |-
                      Subnets are used for the pod network across the cluster.

                      Dual-stack clusters may set 2 subnets (one for each IP family), otherwise only 1 subnet is allowed.
                      Given subnet is split into smaller subnets for every node.
                    items:
                      properties:
                        cidr:
                          description: CIDR specifies L3Subnet, which is split into
                            smaller subnets for every node.
                          maxLength: 43
                          type: string
                          x-kubernetes-validations:
                          - message: CIDR is invalid
                            rule: isCIDR(self)
                        hostSubnet:
                          description: |-
                            HostSubnet specifies the subnet size for every node.

                            When not set, it will be assigned automatically.
                          format: int32
                          maximum: 127
                          minimum: 1
                          type: integer
                      required:
                      - cidr
                      type: object
                      x-kubernetes-validations:
                      - message: HostSubnet must be smaller than CIDR subnet
                        rule: '!has(self.hostSubnet) || !isCIDR(self.cidr) || self.hostSubnet
                          > cidr(self.cidr).prefixLength()'
                      - message: HostSubnet must < 32 for ipv4 CIDR
                        rule: '!has(self.hostSubnet) || !isCIDR(self.cidr) || (cidr(self.cidr).ip().family()
                          != 4 || self.hostSubnet < 32)'
                    maxItems: 2
                    minItems: 1
                    type: array
                    x-kubernetes-validations:
                    - message: When 2 CIDRs are set, they must be from different IP
                        families
                      rule: size(self) != 2 || !isCIDR(self[0].cidr) || !isCIDR(self[1].cidr)
                        || cidr(self[0].cidr).ip().family() != cidr(self[1].cidr).ip().family()
                required:
                - role
                - subnets
                type: object
                x-kubernetes-validations:
                - message: JoinSubnets is only supported for Primary network
                  rule: '!has(self.joinSubnets) || has(self.role) && self.role ==
                    ''Primary'''
                - message: MTU should be greater than or equal to 1280 when IPv6 subent
                    is used
                  rule: '!has(self.subnets) || !has(self.mtu) || !self.subnets.exists_one(i,
                    isCIDR(i.cidr) && cidr(i.cidr).ip().family() == 6) || self.mtu
                    >= 1280'
              topology:
                description: |-
                  Topology describes network configuration.

                  Allowed values are "Layer3", "Layer2".
                  Layer3 topology creates a layer 2 segment per node, each with a different subnet. Layer 3 routing is used to interconnect node subnets.
                  Layer2 topology creates one logical switch shared by all nodes.
                enum:
                - Layer2
                - Layer3
                type: string
            required:
            - topology
            type: object
            x-kubernetes-validations:
            - message: Spec is immutable
              rule: self == oldSelf
            - message: spec.layer3 is required when topology is Layer3 and forbidden
                otherwise
              rule: 'has(self.topology) && self.topology == ''Layer3'' ? has(self.layer3):
                !has(self.layer3)'
            - message: spec.layer2 is required when topology is Layer2 and forbidden
                otherwise
              rule: 'has(self.topology) && self.topology == ''Layer2'' ? has(self.layer2):
                !has(self.layer2)'
          status:
            description: UserDefinedNetworkStatus contains the observed status of
              the UserDefinedNetwork.
            properties:
              conditions:
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: clusteruserdefinednetworks.k8s.ovn.org
spec:
  group: k8s.ovn.org
  names:
    kind: ClusterUserDefinedNetwork
    listKind: ClusterUserDefinedNetworkList
    plural: clusteruserdefinednetworks
    singular: clusteruserdefinednetwork
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: ClusterUserDefinedNetwork describe network request for a shared
          network across namespaces.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ClusterUserDefinedNetworkSpec defines the desired state of
              ClusterUserDefinedNetwork.
            properties:
              namespaceSelector:
                description: NamespaceSelector Label selector for which namespace
                  network should be available for.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              network:
                description: Network is the user-defined-network spec
                properties:
                  layer2:
                    description: Layer2 is the Layer2 topology configuration.
                    properties:
{{- if .OVN_PRE_CONF_UDN_ADDR_ENABLE }}
                      defaultGatewayIPs:
                        description: |-
                          defaultGatewayIPs specifies the default gateway IP used in the internal OVN topology.

                          Dual-stack clusters may set 2 IPs (one for each IP family), otherwise only 1 IP is allowed.
                          This field is only allowed for "Primary" network.
                          It is not recommended to set this field without explicit need and understanding of the OVN network topology.
                          When omitted, an IP from the subnets field is used.
                        items:
                          type: string
                          x-kubernetes-validations:
                          - message: IP is invalid
                            rule: isIP(self)
                        maxItems: 2
                        minItems: 1
                        type: array
                        x-kubernetes-validations:
                        - message: When 2 IPs are set, they must be from different
                            IP families
                          rule: size(self) != 2 || !isIP(self[0]) || !isIP(self[1])
                            || ip(self[0]).family() != ip(self[1]).family()
                      infrastructureSubnets:
                        description: |-
                          infrastructureSubnets specifies a list of internal CIDR ranges that OVN-Kubernetes will reserve for internal network infrastructure.
                          Any IP addresses within these ranges cannot be assigned to workloads.
                          When omitted, OVN-Kubernetes will automatically allocate IP addresses from `subnets` for its infrastructure needs.
                          When there are not enough available IPs in the provided infrastructureSubnets, OVN-Kubernetes will automatically allocate IP addresses from subnets for its infrastructure needs.
                          When `reservedSubnets` is also specified the CIDRs cannot overlap.
                          When `defaultGatewayIPs` is also specified, the default gateway IPs must belong to one of the infrastructure subnet CIDRs.
                          Each item should be in range of the specified CIDR(s) in `subnets`.
                          The maximum number of entries allowed is 4.
                          The format should match standard CIDR notation (for example, "10.128.0.0/16").
                          This field must be omitted if `subnets` is unset or `ipam.mode` is `Disabled`.
                        items:
                          maxLength: 43
                          type: string
                          x-kubernetes-validations:
                          - message: CIDR is invalid
                            rule: isCIDR(self)
                        maxItems: 4
                        minItems: 1
                        type: array
{{- end }}
                      ipam:
                        description: IPAM section contains IPAM-related configuration
                          for the network.
                        minProperties: 1
                        properties:
                          lifecycle:
                            description: |-
                              Lifecycle controls IP addresses management lifecycle.

                              The only allowed value is Persistent. When set, the IP addresses assigned by OVN Kubernetes will be persisted in an
                              `ipamclaims.k8s.cni.cncf.io` object. These IP addresses will be reused by other pods if requested.
                              Only supported when mode is `Enabled`.
                            enum:
                            - Persistent
                            type: string
                          mode:
                            description: |-
                              Mode controls how much of the IP configuration will be managed by OVN.
                              `Enabled` means OVN-Kubernetes will apply IP configuration to the SDN infrastructure and it will also assign IPs
                              from the selected subnet to the individual pods.
                              `Disabled` means OVN-Kubernetes will only assign MAC addresses and provide layer 2 communication, letting users
                              configure IP addresses for the pods.
                              `Disabled` is only available for Secondary networks.
                              By disabling IPAM, any Kubernetes features that rely on selecting pods by IP will no longer function
                              (such as network policy, services, etc). Additionally, IP port security will also be disabled for interfaces attached to this network.
                              Defaults to `Enabled`.
                            enum:
                            - Enabled
                            - Disabled
                            type: string
                        type: object
                        x-kubernetes-validations:
                        - message: lifecycle Persistent is only supported when ipam.mode
                            is Enabled
                          rule: '!has(self.lifecycle) || self.lifecycle != ''Persistent''
                            || !has(self.mode) || self.mode == ''Enabled'''
                      joinSubnets:
                        description: |-
                          JoinSubnets are used inside the OVN network topology.

                          Dual-stack clusters may set 2 subnets (one for each IP family), otherwise only 1 subnet is allowed.
                          This field is only allowed for "Primary" network.
                          It is not recommended to set this field without explicit need and understanding of the OVN network topology.
                          When omitted, the platform will choose a reasonable default which is subject to change over time.
                        items:
                          maxLength: 43
                          type: string
                          x-kubernetes-validations:
                          - message: CIDR is invalid
                            rule: isCIDR(self)
                        maxItems: 2
                        minItems: 1
                        type: array
                        x-kubernetes-validations:
                        - message: When 2 CIDRs are set, they must be from different
                            IP families
                          rule: size(self) != 2 || !isCIDR(self[0]) || !isCIDR(self[1])
                            || cidr(self[0]).ip().family() != cidr(self[1]).ip().family()
                      mtu:
                        description: |-
                          MTU is the maximum transmission unit for a network.
                          MTU is optional, if not provided, the globally configured value in OVN-Kubernetes (defaults to 1400) is used for the network.
                        format: int32
                        maximum: 65536
                        minimum: 576
                        type: integer
{{- if .OVN_PRE_CONF_UDN_ADDR_ENABLE }}
                      reservedSubnets:
                        description: |-
                          reservedSubnets specifies a list of CIDRs reserved for static IP assignment, excluded from automatic allocation.
                          reservedSubnets is optional. When omitted, all IP addresses in `subnets` are available for automatic assignment.
                          IPs from these ranges can still be requested through static IP assignment.
                          Each item should be in range of the specified CIDR(s) in `subnets`.
                          The maximum number of entries allowed is 25.
                          The format should match standard CIDR notation (for example, "10.128.0.0/16").
                          This field must be omitted if `subnets` is unset or `ipam.mode` is `Disabled`.
                        items:
                          maxLength: 43
                          type: string
                          x-kubernetes-validations:
                          - message: CIDR is invalid
                            rule: isCIDR(self)
                        maxItems: 25
                        minItems: 1
                        type: array
{{- end }}
                      role:
                        description: |-
                          Role describes the network role in the pod.

                          Allowed value is "Secondary".
                          Secondary network is only assigned to pods that use `k8s.v1.cni.cncf.io/networks` annotation to select given network.
                        enum:
                        - Primary
                        - Secondary
                        type: string
                      subnets:
                        description: |-
                          Subnets are used for the pod network across the cluster.
                          Dual-stack clusters may set 2 subnets (one for each IP family), otherwise only 1 subnet is allowed.

                          The format should match standard CIDR notation (for example, "10.128.0.0/16").
                          This field must be omitted if `ipam.mode` is `Disabled`.
                        items:
                          maxLength: 43
                          type: string
                          x-kubernetes-validations:
                          - message: CIDR is invalid
                            rule: isCIDR(self)
                        maxItems: 2
                        minItems: 1
                        type: array
                        x-kubernetes-validations:
                        - message: When 2 CIDRs are set, they must be from different
                            IP families
                          rule: size(self) != 2 || !isCIDR(self[0]) || !isCIDR(self[1])
                            || cidr(self[0]).ip().family() != cidr(self[1]).ip().family()
                    required:
                    - role
                    type: object
                    x-kubernetes-validations:
                    - message: Subnets is required with ipam.mode is Enabled or unset
                      rule: has(self.ipam) && has(self.ipam.mode) && self.ipam.mode
                        != 'Enabled' || has(self.subnets)
                    - message: Subnets must be unset when ipam.mode is Disabled
                      rule: '!has(self.ipam) || !has(self.ipam.mode) || self.ipam.mode
                        != ''Disabled'' || !has(self.subnets)'
                    - message: Disabled ipam.mode is only supported for Secondary
                        network
                      rule: '!has(self.ipam) || !has(self.ipam.mode) || self.ipam.mode
                        != ''Disabled'' || self.role == ''Secondary'''
                    - message: JoinSubnets is only supported for Primary network
                      rule: '!has(self.joinSubnets) || has(self.role) && self.role
                        == ''Primary'''
                    - message: MTU should be greater than or equal to 1280 when IPv6
                        subnet is used
                      rule: '!has(self.subnets) || !has(self.mtu) || !self.subnets.exists_one(i,
                        isCIDR(i) && cidr(i).ip().family() == 6) || self.mtu >= 1280'
{{- if .OVN_PRE_CONF_UDN_ADDR_ENABLE }}
                    - message: defaultGatewayIPs is only supported for Primary network
                      rule: '!has(self.defaultGatewayIPs) || has(self.role) && self.role
                        == ''Primary'''
                    - message: defaultGatewayIPs must belong to one of the subnets
                        specified in the subnets field
                      rule: '!has(self.defaultGatewayIPs) || self.defaultGatewayIPs.all(ip,
                        self.subnets.exists(subnet, cidr(subnet).containsIP(ip)))'
                    - message: defaultGatewayIPs must be specified for all IP families
                      rule: '!has(self.defaultGatewayIPs) || size(self.defaultGatewayIPs)
                        == size(self.subnets)'
                    - message: reservedSubnets must be unset when subnets is unset
                      rule: '!has(self.reservedSubnets) || has(self.subnets)'
                    - message: reservedSubnets is only supported for Primary network
                      rule: '!has(self.reservedSubnets) || has(self.role) && self.role
                        == ''Primary'''
                    - message: infrastructureSubnets must be unset when subnets is
                        unset
                      rule: '!has(self.infrastructureSubnets) || has(self.subnets)'
                    - message: infrastructureSubnets is only supported for Primary
                        network
                      rule: '!has(self.infrastructureSubnets) || has(self.role) &&
                        self.role == ''Primary'''
                    - message: defaultGatewayIPs have to belong to infrastructureSubnets
                      rule: '!has(self.infrastructureSubnets) || !has(self.defaultGatewayIPs)
                        || self.defaultGatewayIPs.all(ip, self.infrastructureSubnets.exists(subnet,
                        cidr(subnet).containsIP(ip)))'
                    - fieldPath: .reservedSubnets
                      message: reservedSubnets must be subnetworks of the networks
                        specified in the subnets field
                      rule: '!has(self.reservedSubnets) || self.reservedSubnets.all(e,
                        self.subnets.exists(s, cidr(s).containsCIDR(cidr(e))))'
                    - fieldPath: .infrastructureSubnets
                      message: infrastructureSubnets must be subnetworks of the networks
                        specified in the subnets field
                      rule: '!has(self.infrastructureSubnets) || self.infrastructureSubnets.all(e,
                        self.subnets.exists(s, cidr(s).containsCIDR(cidr(e))))'
                    - message: infrastructureSubnets and reservedSubnets must not
                        overlap
                      rule: '!has(self.infrastructureSubnets) || !has(self.reservedSubnets)
                        || self.infrastructureSubnets.all(infra, !self.reservedSubnets.exists(reserved,
                        cidr(infra).containsCIDR(reserved) || cidr(reserved).containsCIDR(infra)))'
                    - message: infrastructureSubnets must be a masked network address
                        (no host bits set)
                      rule: '!has(self.infrastructureSubnets) || self.infrastructureSubnets.all(s,
                        isCIDR(s) && cidr(s) == cidr(s).masked())'
                    - message: reservedSubnets must be a masked network address (no
                        host bits set)
                      rule: '!has(self.reservedSubnets) || self.reservedSubnets.all(s,
                        isCIDR(s) && cidr(s) == cidr(s).masked())'
{{- end }}
                  layer3:
                    description: Layer3 is the Layer3 topology configuration.
                    properties:
                      joinSubnets:
                        description: |-
                          JoinSubnets are used inside the OVN network topology.

                          Dual-stack clusters may set 2 subnets (one for each IP family), otherwise only 1 subnet is allowed.
                          This field is only allowed for "Primary" network.
                          It is not recommended to set this field without explicit need and understanding of the OVN network topology.
                          When omitted, the platform will choose a reasonable default which is subject to change over time.
                        items:
                          maxLength: 43
                          type: string
                          x-kubernetes-validations:
                          - message: CIDR is invalid
                            rule: isCIDR(self)
                        maxItems: 2
                        minItems: 1
                        type: array
                        x-kubernetes-validations:
                        - message: When 2 CIDRs are set, they must be from different
                            IP families
                          rule: size(self) != 2 || !isCIDR(self[0]) || !isCIDR(self[1])
                            || cidr(self[0]).ip().family() != cidr(self[1]).ip().family()
                      mtu:
                        description: |-
                          MTU is the maximum transmission unit for a network.

                          MTU is optional, if not provided, the globally configured value in OVN-Kubernetes (defaults to 1400) is used for the network.
                        format: int32
                        maximum: 65536
                        minimum: 576
                        type: integer
                      role:
                        description: |-
                          Role describes the network role in the pod.

                          Allowed values are "Primary" and "Secondary".
                          Primary network is automatically assigned to every pod created in the same namespace.
                          Secondary network is only assigned to pods that use `k8s.v1.cni.cncf.io/networks` annotation to select given network.
                        enum:
                        - Primary
                        - Secondary
                        type: string
                      subnets:
                        description: |-
                          Subnets are used for the pod network across the cluster.

                          Dual-stack clusters may set 2 subnets (one for each IP family), otherwise only 1 subnet is allowed.
                          Given subnet is split into smaller subnets for every node.
                        items:
                          properties:
                            cidr:
                              description: CIDR specifies L3Subnet, which is split
                                into smaller subnets for every node.
                              maxLength: 43
                              type: string
                              x-kubernetes-validations:
                              - message: CIDR is invalid
                                rule: isCIDR(self)
                            hostSubnet:
                              description: |-
                                HostSubnet specifies the subnet size for every node.

                                When not set, it will be assigned automatically.
                              format: int32
                              maximum: 127
                              minimum: 1
                              type: integer
                          required:
                          - cidr
                          type: object
                          x-kubernetes-validations:
                          - message: HostSubnet must be smaller than CIDR subnet
                            rule: '!has(self.hostSubnet) || !isCIDR(self.cidr) ||
                              self.hostSubnet > cidr(self.cidr).prefixLength()'
                          - message: HostSubnet must < 32 for ipv4 CIDR
                            rule: '!has(self.hostSubnet) || !isCIDR(self.cidr) ||
                              (cidr(self.cidr).ip().family() != 4 || self.hostSubnet
                              < 32)'
                        maxItems: 2
                        minItems: 1
                        type: array
                        x-kubernetes-validations:
                        - message: When 2 CIDRs are set, they must be from different
                            IP families
                          rule: size(self) != 2 || !isCIDR(self[0].cidr) || !isCIDR(self[1].cidr)
                            || cidr(self[0].cidr).ip().family() != cidr(self[1].cidr).ip().family()
                    required:
                    - role
                    - subnets
                    type: object
                    x-kubernetes-validations:
                    - message: JoinSubnets is only supported for Primary network
                      rule: '!has(self.joinSubnets) || has(self.role) && self.role
                        == ''Primary'''
                    - message: MTU should be greater than or equal to 1280 when IPv6
                        subnet is used
                      rule: '!has(self.subnets) || !has(self.mtu) || !self.subnets.exists_one(i,
                        isCIDR(i.cidr) && cidr(i.cidr).ip().family() == 6) || self.mtu
                        >= 1280'
                  localnet:
                    description: Localnet is the Localnet topology configuration.
                    properties:
                      excludeSubnets:
                        description: |-
                          excludeSubnets is a list of CIDRs to be removed from the specified CIDRs in `subnets`.
                          The CIDRs in this list must be in range of at least one subnet specified in `subnets`.
                          excludeSubnets is optional. When omitted no IP address is excluded and all IP addresses specified in `subnets`
                          are subject to assignment.
                          The format should match standard CIDR notation (for example, "10.128.0.0/16").
                          This field must be omitted if `subnets` is unset or `ipam.mode` is `Disabled`.
                          When `physicalNetworkName` points to OVS bridge mapping of a network with reserved IP addresses
                          (which shouldn't be assigned by OVN-Kubernetes), the specified CIDRs will not be assigned. For example:
                          Given: `subnets: "10.0.0.0/24"`, `excludeSubnets: "10.0.0.200/30", the following addresses will not be assigned
                          to pods: `10.0.0.201`, `10.0.0.202`.
                        items:
                          maxLength: 43
                          type: string
                          x-kubernetes-validations:
                          - message: CIDR is invalid
                            rule: isCIDR(self)
                        maxItems: 25
                        minItems: 1
                        type: array
                      ipam:
                        description: "ipam configurations for the network.\nipam is
                          optional. When omitted, `subnets` must be specified.\nWhen
                          `ipam.mode` is `Disabled`, `subnets` must be omitted.\n`ipam.mode`
                          controls how much of the IP configuration will be managed
                          by OVN.\n   When `Enabled`, OVN-Kubernetes will apply IP
                          configuration to the SDN infra and assign IPs from the selected\n
                          \  subnet to the pods.\n   When `Disabled`, OVN-Kubernetes
                          only assigns MAC addresses, and provides layer2 communication,
                          and enables users\n   to configure IP addresses on the pods.\n`ipam.lifecycle`
                          controls IP addresses management lifecycle.\n   When set
                          to 'Persistent', the assigned IP addresses will be persisted
                          in `ipamclaims.k8s.cni.cncf.io` object.\n\t  Useful for
                          VMs, IP address will be persistent after restarts and migrations.
                          Supported when `ipam.mode` is `Enabled`."
                        minProperties: 1
                        properties:
                          lifecycle:
                            description: |-
                              Lifecycle controls IP addresses management lifecycle.

                              The only allowed value is Persistent. When set, the IP addresses assigned by OVN Kubernetes will be persisted in an
                              `ipamclaims.k8s.cni.cncf.io` object. These IP addresses will be reused by other pods if requested.
                              Only supported when mode is `Enabled`.
                            enum:
                            - Persistent
                            type: string
                          mode:
                            description: |-
                              Mode controls how much of the IP configuration will be managed by OVN.
                              `Enabled` means OVN-Kubernetes will apply IP configuration to the SDN infrastructure and it will also assign IPs
                              from the selected subnet to the individual pods.
                              `Disabled` means OVN-Kubernetes will only assign MAC addresses and provide layer 2 communication, letting users
                              configure IP addresses for the pods.
                              `Disabled` is only available for Secondary networks.
                              By disabling IPAM, any Kubernetes features that rely on selecting pods by IP will no longer function
                              (such as network policy, services, etc). Additionally, IP port security will also be disabled for interfaces attached to this network.
                              Defaults to `Enabled`.
                            enum:
                            - Enabled
                            - Disabled
                            type: string
                        type: object
                        x-kubernetes-validations:
                        - message: lifecycle Persistent is only supported when ipam.mode
                            is Enabled
                          rule: '!has(self.lifecycle) || self.lifecycle != ''Persistent''
                            || !has(self.mode) || self.mode == ''Enabled'''
                      mtu:
                        description: |-
                          mtu is the maximum transmission unit for a network.
                          mtu is optional. When omitted, the configured value in OVN-Kubernetes (defaults to 1500 for localnet topology)
                          is used for the network.
                          Minimum value for IPv4 subnet is 576, and for IPv6 subnet is 1280.
                          Maximum value is 65536.
                          In a scenario `physicalNetworkName` points to OVS bridge mapping of a network configured with certain MTU settings,
                          this field enables configuring the same MTU on pod interface, having the pod MTU aligned with the network MTU.
                          Misaligned MTU across the stack (e.g.: pod has MTU X, node NIC has MTU Y), could result in network disruptions
                          and bad performance.
                        format: int32
                        maximum: 65536
                        minimum: 576
                        type: integer
                      physicalNetworkName:
                        description: |-
                          physicalNetworkName points to the OVS bridge-mapping's network-name configured in the nodes, required.
                          Min length is 1, max length is 253, cannot contain `,` or `:` characters.
                          In case OVS bridge-mapping is defined by Kubernetes-nmstate with `NodeNetworkConfigurationPolicy` (NNCP),
                          this field should point to the NNCP `spec.desiredState.ovn.bridge-mappings` item's `localnet` value.
                        maxLength: 253
                        minLength: 1
                        type: string
                        x-kubernetes-validations:
                        - message: physicalNetworkName cannot contain `,` or `:` characters
                          rule: self.matches('^[^,:]+$')
                      role:
                        description: |-
                          role describes the network role in the pod, required.
                          Controls whether the pod interface will act as primary or secondary.
                          Localnet topology supports `Secondary` only.
                          The network will be assigned to pods that have the `k8s.v1.cni.cncf.io/networks` annotation in place pointing
                          to subject.
                        enum:
                        - Secondary
                        type: string
                      subnets:
                        description: |-
                          subnets is a list of subnets used for pods in this localnet network across the cluster.
                          The list may be either 1 IPv4 subnet, 1 IPv6 subnet, or 1 of each IP family.
                          When set, OVN-Kubernetes assigns an IP address from the specified CIDRs to the connected pod,
                          eliminating the need for manual IP assignment or reliance on an external IPAM service (e.g., a DHCP server).
                          subnets is optional. When omitted OVN-Kubernetes won't assign IP address automatically.
                          Dual-stack clusters may set 2 subnets (one for each IP family), otherwise only 1 subnet is allowed.
                          The format should match standard CIDR notation (for example, "10.128.0.0/16").
                          This field must be omitted if `ipam.mode` is `Disabled`.
                          When physicalNetworkName points to the OVS bridge mapping of a network that provides IPAM services
                          (e.g., a DHCP server), ipam.mode should be set to Disabled. This turns off OVN-Kubernetes IPAM and avoids
                          conflicts with the existing IPAM services on this localnet network.
                        items:
                          maxLength: 43
                          type: string
                          x-kubernetes-validations:
                          - message: CIDR is invalid
                            rule: isCIDR(self)
                        maxItems: 2
                        minItems: 1
                        type: array
                        x-kubernetes-validations:
                        - message: When 2 CIDRs are set, they must be from different
                            IP families
                          rule: size(self) != 2 || !isCIDR(self[0]) || !isCIDR(self[1])
                            || cidr(self[0]).ip().family() != cidr(self[1]).ip().family()
                      vlan:
                        description: |-
                          vlan configuration for the network.
                          vlan.mode is the VLAN mode.
                            When "Access" is set, OVN-Kubernetes configures the network logical switch port in access mode.
                          vlan.access is the access VLAN configuration.
                          vlan.access.id is the VLAN ID (VID) to be set on the network logical switch port.
                          vlan is optional, when omitted the underlying network default VLAN will be used (usually `1`).
                          When set, OVN-Kubernetes will apply VLAN configuration to the SDN infra and to the connected pods.
                        properties:
                          access:
                            description: Access is the access VLAN configuration
                            properties:
                              id:
                                description: |-
                                  id is the VLAN ID (VID) to be set for the network.
                                  id should be higher than 0 and lower than 4095.
                                format: int32
                                maximum: 4094
                                minimum: 1
                                type: integer
                            required:
                            - id
                            type: object
                          mode:
                            description: |-
                              mode describe the network VLAN mode.
                              Allowed value is "Access".
                              Access sets the network logical switch port in access mode, according to the config.
                            enum:
                            - Access
                            type: string
                        required:
                        - mode
                        type: object
                        x-kubernetes-validations:
                        - message: vlan access config is required when vlan mode is
                            'Access', and forbidden otherwise
                          rule: 'has(self.mode) && self.mode == ''Access'' ? has(self.access):
                            !has(self.access)'
                    required:
                    - physicalNetworkName
                    - role
                    type: object
                    x-kubernetes-validations:
                    - message: Subnets is required with ipam.mode is Enabled or unset,
                        and forbidden otherwise
                      rule: '!has(self.ipam) || !has(self.ipam.mode) || self.ipam.mode
                        == ''Enabled'' ? has(self.subnets) : !has(self.subnets)'
                    - message: excludeSubnets must be unset when subnets is unset
                      rule: '!has(self.excludeSubnets) || has(self.subnets)'
                    - message: MTU should be greater than or equal to 1280 when an
                        IPv6 subnet is used
                      rule: '!has(self.subnets) || !has(self.mtu) || !self.subnets.exists_one(i,
                        isCIDR(i) && cidr(i).ip().family() == 6) || self.mtu >= 1280'
                    - fieldPath: .excludeSubnets
                      message: excludeSubnets must be subnetworks of the networks
                        specified in the subnets field
                      rule: '!has(self.excludeSubnets) || self.excludeSubnets.all(e,
                        self.subnets.exists(s, cidr(s).containsCIDR(cidr(e))))'
                  topology:
                    description: |-
                      Topology describes network configuration.

                      Allowed values are "Layer3", "Layer2" and "Localnet".
                      Layer3 topology creates a layer 2 segment per node, each with a different subnet. Layer 3 routing is used to interconnect node subnets.
                      Layer2 topology creates one logical switch shared by all nodes.
                      Localnet topology is based on layer 2 topology, but also allows connecting to an existent (configured) physical network to provide north-south traffic to the workloads.
                    enum:
                    - Layer2
                    - Layer3
                    - Localnet
                    type: string
                required:
                - topology
                type: object
                x-kubernetes-validations:
                - message: spec.layer3 is required when topology is Layer3 and forbidden
                    otherwise
                  rule: 'has(self.topology) && self.topology == ''Layer3'' ? has(self.layer3):
                    !has(self.layer3)'
                - message: spec.layer2 is required when topology is Layer2 and forbidden
                    otherwise
                  rule: 'has(self.topology) && self.topology == ''Layer2'' ? has(self.layer2):
                    !has(self.layer2)'
                - message: spec.localnet is required when topology is Localnet and
                    forbidden otherwise
                  rule: 'has(self.topology) && self.topology == ''Localnet'' ? has(self.localnet):
                    !has(self.localnet)'
                - message: Network spec is immutable
                  rule: self == oldSelf
            required:
            - namespaceSelector
            - network
            type: object
          status:
            description: ClusterUserDefinedNetworkStatus contains the observed status
              of the ClusterUserDefinedNetwork.
            properties:
              conditions:
                description: Conditions slice of condition objects indicating details
                  about ClusterUserDefineNetwork status.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
{{- end }}
{{- if .OVN_ROUTE_ADVERTISEMENTS_ENABLE }}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: routeadvertisements.k8s.ovn.org
spec:
  group: k8s.ovn.org
  names:
    kind: RouteAdvertisements
    listKind: RouteAdvertisementsList
    plural: routeadvertisements
    shortNames:
    - ra
    singular: routeadvertisements
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.status
      name: Status
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: RouteAdvertisements is the Schema for the routeadvertisements
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RouteAdvertisementsSpec defines the desired state of RouteAdvertisements
            properties:
              advertisements:
                description: advertisements determines what is advertised.
                items:
                  description: AdvertisementType determines the type of advertisement.
                  enum:
                  - PodNetwork
                  - EgressIP
                  type: string
                maxItems: 2
                minItems: 1
                type: array
                x-kubernetes-validations:
                - rule: self.all(x, self.exists_one(y, x == y))
              frrConfigurationSelector:
                description: |-
                  frrConfigurationSelector determines which FRRConfigurations will the
                  OVN-Kubernetes driven FRRConfigurations be based on. This field follows
                  standard label selector semantics.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              networkSelectors:
                description: |-
                  networkSelectors determines which network routes should be advertised.
                  Only ClusterUserDefinedNetworks and the default network can be selected.
                items:
                  description: NetworkSelector selects a set of networks.
                  properties:
                    clusterUserDefinedNetworkSelector:
                      description: |-
                        clusterUserDefinedNetworkSelector selects ClusterUserDefinedNetworks when
                        NetworkSelectionType is 'ClusterUserDefinedNetworks'.
                      properties:
                        networkSelector:
                          description: |-
                            networkSelector selects ClusterUserDefinedNetworks by label. A null
                            selector will mot match anything, while an empty ({}) selector will match
                            all.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - networkSelector
                      type: object
                    networkAttachmentDefinitionSelector:
                      description: |-
                        networkAttachmentDefinitionSelector selects networks defined in the
                        selected NetworkAttachmentDefinitions when NetworkSelectionType is
                        'SecondaryUserDefinedNetworks'.
                      properties:
                        namespaceSelector:
                          description: |-
                            namespaceSelector selects namespaces where the
                            NetworkAttachmentDefinitions are defined. This field follows standard
                            label selector semantics.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        networkSelector:
                          description: |-
                            networkSelector selects NetworkAttachmentDefinitions within the selected
                            namespaces by label. This field follows standard label selector
                            semantics.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - namespaceSelector
                      - networkSelector
                      type: object
                    networkSelectionType:
                      description: networkSelectionType determines the type of networks
                        selected.
                      enum:
                      - DefaultNetwork
                      - ClusterUserDefinedNetworks
                      - PrimaryUserDefinedNetworks
                      - SecondaryUserDefinedNetworks
                      - NetworkAttachmentDefinitions
                      type: string
                    primaryUserDefinedNetworkSelector:
                      description: |-
                        primaryUserDefinedNetworkSelector selects primary UserDefinedNetworks when
                        NetworkSelectionType is 'PrimaryUserDefinedNetworks'.
                      properties:
                        namespaceSelector:
                          description: |-
                            namespaceSelector select the primary UserDefinedNetworks that are servind
                            the selected namespaces. This field follows standard label selector
                            semantics.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - namespaceSelector
                      type: object
                    secondaryUserDefinedNetworkSelector:
                      description: |-
                        secondaryUserDefinedNetworkSelector selects secondary UserDefinedNetworks
                        when NetworkSelectionType is 'SecondaryUserDefinedNetworks'.
                      properties:
                        namespaceSelector:
                          description: |-
                            namespaceSelector selects namespaces where the secondary
                            UserDefinedNetworks are defined. This field follows standard label
                            selector semantics.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        networkSelector:
                          description: |-
                            networkSelector selects secondary UserDefinedNetworks within the selected
                            namespaces by label. This field follows standard label selector
                            semantics.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - namespaceSelector
                      - networkSelector
                      type: object
                  required:
                  - networkSelectionType
                  type: object
                  x-kubernetes-validations:
                  - message: 'Inconsistent selector: both networkSelectionType ClusterUserDefinedNetworks
                      and clusterUserDefinedNetworkSelector have to be set or neither'
                    rule: '!has(self.networkSelectionType) ? true : has(self.clusterUserDefinedNetworkSelector)
                      ? self.networkSelectionType == ''ClusterUserDefinedNetworks''
                      : self.networkSelectionType != ''ClusterUserDefinedNetworks'''
                  - message: 'Inconsistent selector: both networkSelectionType PrimaryUserDefinedNetworks
                      and primaryUserDefinedNetworkSelector have to be set or neither'
                    rule: '!has(self.networkSelectionType) ? true : has(self.primaryUserDefinedNetworkSelector)
                      ? self.networkSelectionType == ''PrimaryUserDefinedNetworks''
                      : self.networkSelectionType != ''PrimaryUserDefinedNetworks'''
                  - message: 'Inconsistent selector: both networkSelectionType SecondaryUserDefinedNetworks
                      and secondaryUserDefinedNetworkSelector have to be set or neither'
                    rule: '!has(self.networkSelectionType) ? true : has(self.secondaryUserDefinedNetworkSelector)
                      ? self.networkSelectionType == ''SecondaryUserDefinedNetworks''
                      : self.networkSelectionType != ''SecondaryUserDefinedNetworks'''
                  - message: 'Inconsistent selector: both networkSelectionType NetworkAttachmentDefinitions
                      and networkAttachmentDefinitionSelector have to be set or neither'
                    rule: '!has(self.networkSelectionType) ? true : has(self.networkAttachmentDefinitionSelector)
                      ? self.networkSelectionType == ''NetworkAttachmentDefinitions''
                      : self.networkSelectionType != ''NetworkAttachmentDefinitions'''
                maxItems: 5
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - networkSelectionType
                x-kubernetes-list-type: map
              nodeSelector:
                description: |-
                  nodeSelector limits the advertisements to selected nodes. This field
                  follows standard label selector semantics.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              targetVRF:
                description: targetVRF determines which VRF the routes should be advertised
                  in.
                type: string
            required:
            - advertisements
            - frrConfigurationSelector
            - networkSelectors
            - nodeSelector
            type: object
            x-kubernetes-validations:
            - message: If 'PodNetwork' is selected for advertisement, a 'nodeSelector'
                can't be specified as it needs to be advertised on all nodes
              rule: (!has(self.nodeSelector.matchLabels) && !has(self.nodeSelector.matchExpressions))
                || !('PodNetwork' in self.advertisements)
            - message: Only DefaultNetwork or ClusterUserDefinedNetworks can be selected
              rule: '!self.networkSelectors.exists(i, i.networkSelectionType != ''DefaultNetwork''
                && i.networkSelectionType != ''ClusterUserDefinedNetworks'')'
          status:
            description: |-
              RouteAdvertisementsStatus defines the observed state of RouteAdvertisements.
              It should always be reconstructable from the state of the cluster and/or
              outside world.
            properties:
              conditions:
                description: |-
                  conditions is an array of condition objects indicating details about
                  status of RouteAdvertisements object.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              status:
                description: |-
                  status is a concise indication of whether the RouteAdvertisements
                  resource is applied with success.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
{{- end }}
