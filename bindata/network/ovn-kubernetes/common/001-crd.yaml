---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: egressfirewalls.k8s.ovn.org
spec:
  group: k8s.ovn.org
  names:
    kind: EgressFirewall
    listKind: EgressFirewallList
    plural: egressfirewalls
    singular: egressfirewall
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.status
          name: EgressFirewall Status
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: EgressFirewall describes the current egress firewall for a Namespace.
            Traffic from a pod to an IP address outside the cluster will be checked
            against each EgressFirewallRule in the pod's namespace's EgressFirewall,
            in order. If no rule matches (or no EgressFirewall is present) then the
            traffic will be allowed by default.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
              properties:
                name:
                  type: string
                  pattern: ^default$
            spec:
              description: Specification of the desired behavior of EgressFirewall.
              properties:
                egress:
                  description: a collection of egress firewall rule objects
                  items:
                    description: EgressFirewallRule is a single egressfirewall rule
                      object
                    properties:
                      ports:
                        description: ports specify what ports and protocols the rule
                          applies to
                        items:
                          description: EgressFirewallPort specifies the port to allow
                            or deny traffic to
                          properties:
                            port:
                              description: port that the traffic must match
                              format: int32
                              maximum: 65535
                              minimum: 1
                              type: integer
                            protocol:
                              description: protocol (tcp, udp, sctp) that the traffic
                                must match.
                              pattern: ^TCP|UDP|SCTP$
                              type: string
                          required:
                            - port
                            - protocol
                          type: object
                        type: array
                      to:
                        description: to is the target that traffic is allowed/denied
                          to
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          cidrSelector:
                            description: cidrSelector is the CIDR range to allow/deny
                              traffic to. If this is set, dnsName and nodeSelector must
                              be unset.
                            type: string
                          dnsName:
                            description: dnsName is the domain name to allow/deny traffic
                              to. If this is set, cidrSelector and nodeSelector must
                              be unset.
                            pattern: ^([A-Za-z0-9-]+\.)*[A-Za-z0-9-]+\.?$
                            type: string
                          nodeSelector:
                            description: nodeSelector will allow/deny traffic to the
                              Kubernetes node IP of selected nodes. If this is set,
                              cidrSelector and DNSName must be unset.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values array
                                        must be non-empty. If the operator is Exists
                                        or DoesNotExist, the values array must be empty.
                                        This array is replaced during a strategic merge
                                        patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                    - key
                                    - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      type:
                        description: type marks this as an "Allow" or "Deny" rule
                        pattern: ^Allow|Deny$
                        type: string
                    required:
                      - to
                      - type
                    type: object
                  type: array
              required:
                - egress
              type: object
            status:
              description: Observed status of EgressFirewall
              properties:
                status:
                  type: string
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: egressips.k8s.ovn.org
spec:
  group: k8s.ovn.org
  names:
    kind: EgressIP
    listKind: EgressIPList
    plural: egressips
    shortNames:
    - eip
    singular: egressip
  scope: Cluster
  versions:
  - name: v1
    additionalPrinterColumns:
    - jsonPath: .spec.egressIPs[*]
      name: EgressIPs
      type: string
    - jsonPath: .status.items[*].node
      name: Assigned Node
      type: string
    - jsonPath: .status.items[*].egressIP
      name: Assigned EgressIPs
      type: string
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        description: EgressIP is a CRD allowing the user to define a fixed source IP for all egress traffic originating from any pods which match the EgressIP resource according to its spec definition.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Specification of the desired behavior of EgressIP.
            properties:
              egressIPs:
                description: EgressIPs is the list of egress IP addresses requested. Can be IPv4 and/or IPv6. This field is mandatory.
                items:
                  type: string
                type: array
              namespaceSelector:
                description: NamespaceSelector applies the egress IP only to the namespace(s) whose label matches this definition. This field is mandatory.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
              podSelector:
                description: 'PodSelector applies the egress IP only to the pods whose label matches this definition. This field is optional, and in case it is not set: results in the egress IP being applied to all pods in the namespace(s) matched by the NamespaceSelector. In case it is set: is intersected with the NamespaceSelector, thus applying the egress IP to the pods (in the namespace(s) already matched by the NamespaceSelector) which match this pod selector.'
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
            required:
            - egressIPs
            - namespaceSelector
            type: object
          status:
            description: Observed status of EgressIP. Read-only.
            properties:
              items:
                description: The list of assigned egress IPs and their corresponding node assignment.
                items:
                  description: The per node status, for those egress IPs who have been assigned.
                  properties:
                    egressIP:
                      description: Assigned egress IP
                      type: string
                    node:
                      description: Assigned node name
                      type: string
                  required:
                  - egressIP
                  - node
                  type: object
                type: array
            required:
            - items
            type: object
        required:
        - spec
        type: object
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: egressqoses.k8s.ovn.org
spec:
  group: k8s.ovn.org
  names:
    kind: EgressQoS
    listKind: EgressQoSList
    plural: egressqoses
    singular: egressqos
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: EgressQoS is a CRD that allows the user to define a DSCP value
          for pods egress traffic on its namespace to specified CIDRs. Traffic from
          these pods will be checked against each EgressQoSRule in the namespace's
          EgressQoS, and if there is a match the traffic is marked with the relevant
          DSCP value.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
            properties:
              name:
                type: string
                pattern: ^default$
          spec:
            description: EgressQoSSpec defines the desired state of EgressQoS
            properties:
              egress:
                description: a collection of Egress QoS rule objects
                items:
                  properties:
                    dscp:
                      description: DSCP marking value for matching pods' traffic.
                      maximum: 63
                      minimum: 0
                      type: integer
                    dstCIDR:
                      description: DstCIDR specifies the destination's CIDR. Only
                        traffic heading to this CIDR will be marked with the DSCP
                        value. This field is optional, and in case it is not set the
                        rule is applied to all egress traffic regardless of the destination.
                      format: cidr
                      type: string
                    podSelector:
                      description: PodSelector applies the QoS rule only to the pods
                        in the namespace whose label matches this definition. This
                        field is optional, and in case it is not set results in the
                        rule being applied to all pods in the namespace.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                  required:
                  - dscp
                  type: object
                type: array
            required:
            - egress
            type: object
          status:
            description: EgressQoSStatus defines the observed state of EgressQoS
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: adminpolicybasedexternalroutes.k8s.ovn.org
spec:
  group: k8s.ovn.org
  names:
    kind: AdminPolicyBasedExternalRoute
    listKind: AdminPolicyBasedExternalRouteList
    plural: adminpolicybasedexternalroutes
    shortNames:
    - apbexternalroute
    singular: adminpolicybasedexternalroute
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.lastTransitionTime
      name: Last Update
      type: date
    - jsonPath: .status.status
      name: Status
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: AdminPolicyBasedExternalRoute is a CRD allowing the cluster administrators
          to configure policies for external gateway IPs to be applied to all the
          pods contained in selected namespaces. Egress traffic from the pods that
          belong to the selected namespaces to outside the cluster is routed through
          these external gateway IPs.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AdminPolicyBasedExternalRouteSpec defines the desired state
              of AdminPolicyBasedExternalRoute
            properties:
              from:
                description: From defines the selectors that will determine the target
                  namespaces to this CR.
                properties:
                  namespaceSelector:
                    description: NamespaceSelector defines a selector to be used to
                      determine which namespaces will be targeted by this CR
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                required:
                - namespaceSelector
                type: object
              nextHops:
                description: 'NextHops defines two types of hops: Static and Dynamic.
                  Each hop defines at least one external gateway IP.'
                minProperties: 1
                properties:
                  dynamic:
                    description: DynamicHops defines a slices of DynamicHop. This
                      field is optional.
                    items:
                      description: DynamicHop defines the configuration for a dynamic
                        external gateway interface. These interfaces are wrapped around
                        a pod object that resides inside the cluster. The field NetworkAttachmentName
                        captures the name of the multus network name to use when retrieving
                        the gateway IP to use. The PodSelector and the NamespaceSelector
                        are mandatory fields.
                      properties:
                        bfdEnabled:
                          default: false
                          description: BFDEnabled determines if the interface implements
                            the Bidirectional Forward Detection protocol. Defaults
                            to false.
                          type: boolean
                        namespaceSelector:
                          description: NamespaceSelector defines a selector to filter
                            the namespaces where the pod gateways are located.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        networkAttachmentName:
                          default: ""
                          description: NetworkAttachmentName determines the multus
                            network name to use when retrieving the pod IPs that will
                            be used as the gateway IP. When this field is empty, the
                            logic assumes that the pod is configured with HostNetwork
                            and is using the node's IP as gateway.
                          type: string
                        podSelector:
                          description: PodSelector defines the selector to filter
                            the pods that are external gateways.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - podSelector
                      type: object
                    type: array
                  static:
                    description: StaticHops defines a slice of StaticHop. This field
                      is optional.
                    items:
                      description: StaticHop defines the configuration of a static
                        IP that acts as an external Gateway Interface. IP field is
                        mandatory.
                      properties:
                        bfdEnabled:
                          default: false
                          description: BFDEnabled determines if the interface implements
                            the Bidirectional Forward Detection protocol. Defaults
                            to false.
                          type: boolean
                        ip:
                          description: IP defines the static IP to be used for egress
                            traffic. The IP can be either IPv4 or IPv6.
                          type: string
                      required:
                      - ip
                      type: object
                    type: array
                type: object
            required:
            - from
            - nextHops
            type: object
          status:
            description: AdminPolicyBasedRouteStatus contains the observed status
              of the AdminPolicyBased route types.
            properties:
              lastTransitionTime:
                description: Captures the time when the last change was applied.
                format: date-time
                type: string
              messages:
                description: An array of Human-readable messages indicating details
                  about the status of the object.
                items:
                  type: string
                type: array
              status:
                description: A concise indication of whether the AdminPolicyBasedRoute
                  resource is applied with success
                type: string
            required:
            - lastTransitionTime
            - messages
            - status
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: egressservices.k8s.ovn.org
spec:
  group: k8s.ovn.org
  names:
    kind: EgressService
    listKind: EgressServiceList
    plural: egressservices
    singular: egressservice
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: EgressService is a CRD that allows the user to request that the
          source IP of egress packets originating from all of the pods that are endpoints
          of the corresponding LoadBalancer Service would be its ingress IP. In addition,
          it allows the user to request that egress packets originating from all of
          the pods that are endpoints of the LoadBalancer service would use a different
          network than the main one.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: EgressServiceSpec defines the desired state of EgressService
            properties:
              network:
                description: The network which this service should send egress and
                  corresponding ingress replies to. This is typically implemented
                  as VRF mapping, representing a numeric id or string name of a routing
                  table which by omission uses the default host routing.
                type: string
              nodeSelector:
                description: Allows limiting the nodes that can be selected to handle
                  the service's traffic when sourceIPBy=LoadBalancerIP. When present
                  only a node whose labels match the specified selectors can be selected
                  for handling the service's traffic. When it is not specified any
                  node in the cluster can be chosen to manage the service's traffic.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              sourceIPBy:
                description: Determines the source IP of egress traffic originating
                  from the pods backing the LoadBalancer Service. When `LoadBalancerIP`
                  the source IP is set to its LoadBalancer ingress IP. When `Network`
                  the source IP is set according to the interface of the Network,
                  leveraging the masquerade rules that are already in place. Typically
                  these rules specify SNAT to the IP of the outgoing interface, which
                  means the packet will typically leave with the IP of the node.
                enum:
                - LoadBalancerIP
                - Network
                type: string
            type: object
          status:
            description: EgressServiceStatus defines the observed state of EgressService
            properties:
              host:
                description: The name of the node selected to handle the service's
                  traffic. In case sourceIPBy=Network the field will be set to "ALL".
                type: string
            required:
            - host
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
{{- if .OVN_ADMIN_NETWORK_POLICY_ENABLE }}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/network-policy-api/pull/106
    policy.networking.k8s.io/bundle-version: v0.1.0
  creationTimestamp: null
  name: adminnetworkpolicies.policy.networking.k8s.io
spec:
  group: policy.networking.k8s.io
  names:
    kind: AdminNetworkPolicy
    listKind: AdminNetworkPolicyList
    plural: adminnetworkpolicies
    shortNames:
    - anp
    singular: adminnetworkpolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.priority
      name: Priority
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AdminNetworkPolicy is  a cluster level resource that is part
          of the AdminNetworkPolicy API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Specification of the desired behavior of AdminNetworkPolicy.
            properties:
              egress:
                description: Egress is the list of Egress rules to be applied to the
                  selected pods. A total of 100 rules will be allowed in each ANP
                  instance. The relative precedence of egress rules within a single
                  ANP object (all of which share the priority) will be determined
                  by the order in which the rule is written. Thus, a rule that appears
                  at the top of the egress rules would take the highest precedence.
                  ANPs with no egress rules do not affect egress traffic.
                items:
                  description: AdminNetworkPolicyEgressRule describes an action to
                    take on a particular set of traffic originating from pods selected
                    by a AdminNetworkPolicy's Subject field.
                  properties:
                    action:
                      description: 'Action specifies the effect this rule will have
                        on matching traffic. Currently the following actions are supported:
                        Allow: allows the selected traffic (even if it would otherwise
                        have been denied by NetworkPolicy) Deny: denies the selected
                        traffic Pass: instructs the selected traffic to skip any remaining
                        ANP rules, and then pass execution to any NetworkPolicies
                        that select the pod. If the pod is not selected by any NetworkPolicies
                        then execution is passed to any BaselineAdminNetworkPolicies
                        that select the pod.'
                      type: string
                    name:
                      description: Name is an identifier for this rule, that may be
                        no more than 100 characters in length. This field should be
                        used by the implementation to help improve observability,
                        readability and error-reporting for any applied AdminNetworkPolicies.
                      maxLength: 100
                      type: string
                    ports:
                      description: Ports allows for matching traffic based on port
                        and protocols. This field is a list of destination ports for
                        the outging egress traffic. If Ports is not set then the rule
                        does not filter traffic via port.
                      items:
                        description: AdminNetworkPolicyPort describes how to select
                          network ports on pod(s). Exactly one field must be set.
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          namedPort:
                            description: NamedPort selects a port on a pod(s) based
                              on name.
                            type: string
                          portNumber:
                            description: Port selects a port on a pod(s) based on
                              number.
                            properties:
                              port:
                                description: Number defines a network port value.
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              protocol:
                                default: TCP
                                description: Protocol is the network protocol (TCP,
                                  UDP, or SCTP) which traffic must match. If not specified,
                                  this field defaults to TCP.
                                type: string
                            required:
                            - port
                            - protocol
                            type: object
                          portRange:
                            description: PortRange selects a port range on a pod(s)
                              based on provided start and end values.
                            properties:
                              end:
                                description: End defines a network port that is the
                                  end of a port range, the End value must be greater
                                  than Start.
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              protocol:
                                default: TCP
                                description: Protocol is the network protocol (TCP,
                                  UDP, or SCTP) which traffic must match. If not specified,
                                  this field defaults to TCP.
                                type: string
                              start:
                                description: Start defines a network port that is
                                  the start of a port range, the Start value must
                                  be less than End.
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                            required:
                            - end
                            - start
                            type: object
                        type: object
                      maxItems: 100
                      type: array
                    to:
                      description: To is the List of destinations whose traffic this
                        rule applies to. If any AdminNetworkPolicyPeer matches the
                        destination of outgoing traffic then the specified action
                        is applied. This field must be defined and contain at least
                        one item.
                      items:
                        description: AdminNetworkPolicyPeer defines an in-cluster
                          peer to allow traffic to/from. Exactly one of the selector
                          pointers must be set for a given peer. If a consumer observes
                          none of its fields are set, they must assume an unknown
                          option has been specified and fail closed.
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          namespaces:
                            description: Namespaces defines a way to select a set
                              of Namespaces.
                            maxProperties: 1
                            minProperties: 1
                            properties:
                              namespaceSelector:
                                description: NamespaceSelector is a labelSelector
                                  used to select Namespaces, This field follows standard
                                  label selector semantics; if present but empty,
                                  it selects all Namespaces.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              notSameLabels:
                                description: NotSameLabels is used to select a set
                                  of Namespaces that do not have certain values for
                                  a set of label(s). To be selected a Namespace must
                                  have all of the labels defined in NotSameLabels,
                                  AND at least one of them must have different values
                                  than the subject of this policy. If NotSameLabels
                                  is empty then nothing is selected.
                                items:
                                  type: string
                                maxItems: 100
                                type: array
                              sameLabels:
                                description: SameLabels is used to select a set of
                                  Namespaces that share the same values for a set
                                  of labels. To be selected a Namespace must have
                                  all of the labels defined in SameLabels, AND they
                                  must all have the same value as the subject of this
                                  policy. If Samelabels is Empty then nothing is selected.
                                items:
                                  type: string
                                maxItems: 100
                                type: array
                            type: object
                          pods:
                            description: Pods defines a way to select a set of pods
                              in in a set of namespaces.
                            properties:
                              namespaces:
                                description: Namespaces is used to select a set of
                                  Namespaces.
                                maxProperties: 1
                                minProperties: 1
                                properties:
                                  namespaceSelector:
                                    description: NamespaceSelector is a labelSelector
                                      used to select Namespaces, This field follows
                                      standard label selector semantics; if present
                                      but empty, it selects all Namespaces.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  notSameLabels:
                                    description: NotSameLabels is used to select a
                                      set of Namespaces that do not have certain values
                                      for a set of label(s). To be selected a Namespace
                                      must have all of the labels defined in NotSameLabels,
                                      AND at least one of them must have different
                                      values than the subject of this policy. If NotSameLabels
                                      is empty then nothing is selected.
                                    items:
                                      type: string
                                    maxItems: 100
                                    type: array
                                  sameLabels:
                                    description: SameLabels is used to select a set
                                      of Namespaces that share the same values for
                                      a set of labels. To be selected a Namespace
                                      must have all of the labels defined in SameLabels,
                                      AND they must all have the same value as the
                                      subject of this policy. If Samelabels is Empty
                                      then nothing is selected.
                                    items:
                                      type: string
                                    maxItems: 100
                                    type: array
                                type: object
                              podSelector:
                                description: PodSelector is a labelSelector used to
                                  select Pods, This field is NOT optional, follows
                                  standard label selector semantics and if present
                                  but empty, it selects all Pods.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            required:
                            - namespaces
                            - podSelector
                            type: object
                        type: object
                      maxItems: 100
                      minItems: 1
                      type: array
                  required:
                  - action
                  - to
                  type: object
                maxItems: 100
                type: array
              ingress:
                description: Ingress is the list of Ingress rules to be applied to
                  the selected pods. A total of 100 rules will be allowed in each
                  ANP instance. The relative precedence of ingress rules within a
                  single ANP object (all of which share the priority) will be determined
                  by the order in which the rule is written. Thus, a rule that appears
                  at the top of the ingress rules would take the highest precedence.
                  ANPs with no ingress rules do not affect ingress traffic.
                items:
                  description: AdminNetworkPolicyIngressRule describes an action to
                    take on a particular set of traffic destined for pods selected
                    by an AdminNetworkPolicy's Subject field.
                  properties:
                    action:
                      description: 'Action specifies the effect this rule will have
                        on matching traffic. Currently the following actions are supported:
                        Allow: allows the selected traffic (even if it would otherwise
                        have been denied by NetworkPolicy) Deny: denies the selected
                        traffic Pass: instructs the selected traffic to skip any remaining
                        ANP rules, and then pass execution to any NetworkPolicies
                        that select the pod. If the pod is not selected by any NetworkPolicies
                        then execution is passed to any BaselineAdminNetworkPolicies
                        that select the pod.'
                      type: string
                    from:
                      description: From is the list of sources whose traffic this
                        rule applies to. If any AdminNetworkPolicyPeer matches the
                        source of incoming traffic then the specified action is applied.
                        This field must be defined and contain at least one item.
                      items:
                        description: AdminNetworkPolicyPeer defines an in-cluster
                          peer to allow traffic to/from. Exactly one of the selector
                          pointers must be set for a given peer. If a consumer observes
                          none of its fields are set, they must assume an unknown
                          option has been specified and fail closed.
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          namespaces:
                            description: Namespaces defines a way to select a set
                              of Namespaces.
                            maxProperties: 1
                            minProperties: 1
                            properties:
                              namespaceSelector:
                                description: NamespaceSelector is a labelSelector
                                  used to select Namespaces, This field follows standard
                                  label selector semantics; if present but empty,
                                  it selects all Namespaces.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              notSameLabels:
                                description: NotSameLabels is used to select a set
                                  of Namespaces that do not have certain values for
                                  a set of label(s). To be selected a Namespace must
                                  have all of the labels defined in NotSameLabels,
                                  AND at least one of them must have different values
                                  than the subject of this policy. If NotSameLabels
                                  is empty then nothing is selected.
                                items:
                                  type: string
                                maxItems: 100
                                type: array
                              sameLabels:
                                description: SameLabels is used to select a set of
                                  Namespaces that share the same values for a set
                                  of labels. To be selected a Namespace must have
                                  all of the labels defined in SameLabels, AND they
                                  must all have the same value as the subject of this
                                  policy. If Samelabels is Empty then nothing is selected.
                                items:
                                  type: string
                                maxItems: 100
                                type: array
                            type: object
                          pods:
                            description: Pods defines a way to select a set of pods
                              in in a set of namespaces.
                            properties:
                              namespaces:
                                description: Namespaces is used to select a set of
                                  Namespaces.
                                maxProperties: 1
                                minProperties: 1
                                properties:
                                  namespaceSelector:
                                    description: NamespaceSelector is a labelSelector
                                      used to select Namespaces, This field follows
                                      standard label selector semantics; if present
                                      but empty, it selects all Namespaces.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  notSameLabels:
                                    description: NotSameLabels is used to select a
                                      set of Namespaces that do not have certain values
                                      for a set of label(s). To be selected a Namespace
                                      must have all of the labels defined in NotSameLabels,
                                      AND at least one of them must have different
                                      values than the subject of this policy. If NotSameLabels
                                      is empty then nothing is selected.
                                    items:
                                      type: string
                                    maxItems: 100
                                    type: array
                                  sameLabels:
                                    description: SameLabels is used to select a set
                                      of Namespaces that share the same values for
                                      a set of labels. To be selected a Namespace
                                      must have all of the labels defined in SameLabels,
                                      AND they must all have the same value as the
                                      subject of this policy. If Samelabels is Empty
                                      then nothing is selected.
                                    items:
                                      type: string
                                    maxItems: 100
                                    type: array
                                type: object
                              podSelector:
                                description: PodSelector is a labelSelector used to
                                  select Pods, This field is NOT optional, follows
                                  standard label selector semantics and if present
                                  but empty, it selects all Pods.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            required:
                            - namespaces
                            - podSelector
                            type: object
                        type: object
                      maxItems: 100
                      minItems: 1
                      type: array
                    name:
                      description: Name is an identifier for this rule, that may be
                        no more than 100 characters in length. This field should be
                        used by the implementation to help improve observability,
                        readability and error-reporting for any applied AdminNetworkPolicies.
                      maxLength: 100
                      type: string
                    ports:
                      description: Ports allows for matching traffic based on port
                        and protocols. This field is a list of ports which should
                        be matched on the pods selected for this policy i.e the subject
                        of the policy. So it matches on the destination port for the
                        ingress traffic. If Ports is not set then the rule does not
                        filter traffic via port.
                      items:
                        description: AdminNetworkPolicyPort describes how to select
                          network ports on pod(s). Exactly one field must be set.
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          namedPort:
                            description: NamedPort selects a port on a pod(s) based
                              on name.
                            type: string
                          portNumber:
                            description: Port selects a port on a pod(s) based on
                              number.
                            properties:
                              port:
                                description: Number defines a network port value.
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              protocol:
                                default: TCP
                                description: Protocol is the network protocol (TCP,
                                  UDP, or SCTP) which traffic must match. If not specified,
                                  this field defaults to TCP.
                                type: string
                            required:
                            - port
                            - protocol
                            type: object
                          portRange:
                            description: PortRange selects a port range on a pod(s)
                              based on provided start and end values.
                            properties:
                              end:
                                description: End defines a network port that is the
                                  end of a port range, the End value must be greater
                                  than Start.
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              protocol:
                                default: TCP
                                description: Protocol is the network protocol (TCP,
                                  UDP, or SCTP) which traffic must match. If not specified,
                                  this field defaults to TCP.
                                type: string
                              start:
                                description: Start defines a network port that is
                                  the start of a port range, the Start value must
                                  be less than End.
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                            required:
                            - end
                            - start
                            type: object
                        type: object
                      maxItems: 100
                      type: array
                  required:
                  - action
                  - from
                  type: object
                maxItems: 100
                type: array
              priority:
                description: Priority is a value from 0 to 1000. Rules with lower
                  priority values have higher precedence, and are checked before rules
                  with higher priority values. All AdminNetworkPolicy rules have higher
                  precedence than NetworkPolicy or BaselineAdminNetworkPolicy rules
                  The behavior is undefined if two ANP objects have same priority.
                format: int32
                maximum: 1000
                minimum: 0
                type: integer
              subject:
                description: Subject defines the pods to which this AdminNetworkPolicy
                  applies.
                maxProperties: 1
                minProperties: 1
                properties:
                  namespaces:
                    description: Namespaces is used to select pods via namespace selectors.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  pods:
                    description: Pods is used to select pods via namespace AND pod
                      selectors.
                    properties:
                      namespaceSelector:
                        description: NamespaceSelector follows standard label selector
                          semantics; if empty, it selects all Namespaces.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      podSelector:
                        description: PodSelector is used to explicitly select pods
                          within a namespace; if empty, it selects all Pods.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - namespaceSelector
                    - podSelector
                    type: object
                type: object
            required:
            - priority
            - subject
            type: object
          status:
            description: Status is the status to be reported by the implementation.
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            required:
            - conditions
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/network-policy-api/pull/106
    policy.networking.k8s.io/bundle-version: v0.1.0
  creationTimestamp: null
  name: baselineadminnetworkpolicies.policy.networking.k8s.io
spec:
  group: policy.networking.k8s.io
  names:
    kind: BaselineAdminNetworkPolicy
    listKind: BaselineAdminNetworkPolicyList
    plural: baselineadminnetworkpolicies
    shortNames:
    - banp
    singular: baselineadminnetworkpolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BaselineAdminNetworkPolicy is a cluster level resource that is
          part of the AdminNetworkPolicy API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Specification of the desired behavior of BaselineAdminNetworkPolicy.
            properties:
              egress:
                description: Egress is the list of Egress rules to be applied to the
                  selected pods if they are not matched by any AdminNetworkPolicy
                  or NetworkPolicy rules. A total of 100 Egress rules will be allowed
                  in each BANP instance. The relative precedence of egress rules within
                  a single BANP object will be determined by the order in which the
                  rule is written. Thus, a rule that appears at the top of the egress
                  rules would take the highest precedence. BANPs with no egress rules
                  do not affect egress traffic.
                items:
                  description: BaselineAdminNetworkPolicyEgressRule describes an action
                    to take on a particular set of traffic originating from pods selected
                    by a BaselineAdminNetworkPolicy's Subject field.
                  properties:
                    action:
                      description: 'Action specifies the effect this rule will have
                        on matching traffic. Currently the following actions are supported:
                        Allow: allows the selected traffic Deny: denies the selected
                        traffic'
                      type: string
                    name:
                      description: Name is an identifier for this rule, that may be
                        no more than 100 characters in length. This field should be
                        used by the implementation to help improve observability,
                        readability and error-reporting for any applied BaselineAdminNetworkPolicies.
                      maxLength: 100
                      type: string
                    ports:
                      description: Ports allows for matching traffic based on port
                        and protocols. This field is a list of destination ports for
                        the outging egress traffic. If Ports is not set then the rule
                        does not filter traffic via port.
                      items:
                        description: AdminNetworkPolicyPort describes how to select
                          network ports on pod(s). Exactly one field must be set.
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          namedPort:
                            description: NamedPort selects a port on a pod(s) based
                              on name.
                            type: string
                          portNumber:
                            description: Port selects a port on a pod(s) based on
                              number.
                            properties:
                              port:
                                description: Number defines a network port value.
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              protocol:
                                default: TCP
                                description: Protocol is the network protocol (TCP,
                                  UDP, or SCTP) which traffic must match. If not specified,
                                  this field defaults to TCP.
                                type: string
                            required:
                            - port
                            - protocol
                            type: object
                          portRange:
                            description: PortRange selects a port range on a pod(s)
                              based on provided start and end values.
                            properties:
                              end:
                                description: End defines a network port that is the
                                  end of a port range, the End value must be greater
                                  than Start.
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              protocol:
                                default: TCP
                                description: Protocol is the network protocol (TCP,
                                  UDP, or SCTP) which traffic must match. If not specified,
                                  this field defaults to TCP.
                                type: string
                              start:
                                description: Start defines a network port that is
                                  the start of a port range, the Start value must
                                  be less than End.
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                            required:
                            - end
                            - start
                            type: object
                        type: object
                      maxItems: 100
                      type: array
                    to:
                      description: To is the list of destinations whose traffic this
                        rule applies to. If any AdminNetworkPolicyPeer matches the
                        destination of outgoing traffic then the specified action
                        is applied. This field must be defined and contain at least
                        one item.
                      items:
                        description: AdminNetworkPolicyPeer defines an in-cluster
                          peer to allow traffic to/from. Exactly one of the selector
                          pointers must be set for a given peer. If a consumer observes
                          none of its fields are set, they must assume an unknown
                          option has been specified and fail closed.
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          namespaces:
                            description: Namespaces defines a way to select a set
                              of Namespaces.
                            maxProperties: 1
                            minProperties: 1
                            properties:
                              namespaceSelector:
                                description: NamespaceSelector is a labelSelector
                                  used to select Namespaces, This field follows standard
                                  label selector semantics; if present but empty,
                                  it selects all Namespaces.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              notSameLabels:
                                description: NotSameLabels is used to select a set
                                  of Namespaces that do not have certain values for
                                  a set of label(s). To be selected a Namespace must
                                  have all of the labels defined in NotSameLabels,
                                  AND at least one of them must have different values
                                  than the subject of this policy. If NotSameLabels
                                  is empty then nothing is selected.
                                items:
                                  type: string
                                maxItems: 100
                                type: array
                              sameLabels:
                                description: SameLabels is used to select a set of
                                  Namespaces that share the same values for a set
                                  of labels. To be selected a Namespace must have
                                  all of the labels defined in SameLabels, AND they
                                  must all have the same value as the subject of this
                                  policy. If Samelabels is Empty then nothing is selected.
                                items:
                                  type: string
                                maxItems: 100
                                type: array
                            type: object
                          pods:
                            description: Pods defines a way to select a set of pods
                              in in a set of namespaces.
                            properties:
                              namespaces:
                                description: Namespaces is used to select a set of
                                  Namespaces.
                                maxProperties: 1
                                minProperties: 1
                                properties:
                                  namespaceSelector:
                                    description: NamespaceSelector is a labelSelector
                                      used to select Namespaces, This field follows
                                      standard label selector semantics; if present
                                      but empty, it selects all Namespaces.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  notSameLabels:
                                    description: NotSameLabels is used to select a
                                      set of Namespaces that do not have certain values
                                      for a set of label(s). To be selected a Namespace
                                      must have all of the labels defined in NotSameLabels,
                                      AND at least one of them must have different
                                      values than the subject of this policy. If NotSameLabels
                                      is empty then nothing is selected.
                                    items:
                                      type: string
                                    maxItems: 100
                                    type: array
                                  sameLabels:
                                    description: SameLabels is used to select a set
                                      of Namespaces that share the same values for
                                      a set of labels. To be selected a Namespace
                                      must have all of the labels defined in SameLabels,
                                      AND they must all have the same value as the
                                      subject of this policy. If Samelabels is Empty
                                      then nothing is selected.
                                    items:
                                      type: string
                                    maxItems: 100
                                    type: array
                                type: object
                              podSelector:
                                description: PodSelector is a labelSelector used to
                                  select Pods, This field is NOT optional, follows
                                  standard label selector semantics and if present
                                  but empty, it selects all Pods.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            required:
                            - namespaces
                            - podSelector
                            type: object
                        type: object
                      minItems: 1
                      type: array
                  required:
                  - action
                  - to
                  type: object
                maxItems: 100
                type: array
              ingress:
                description: Ingress is the list of Ingress rules to be applied to
                  the selected pods if they are not matched by any AdminNetworkPolicy
                  or NetworkPolicy rules. A total of 100 Ingress rules will be allowed
                  in each BANP instance. The relative precedence of ingress rules
                  within a single BANP object will be determined by the order in which
                  the rule is written. Thus, a rule that appears at the top of the
                  ingress rules would take the highest precedence. BANPs with no ingress
                  rules do not affect ingress traffic.
                items:
                  description: BaselineAdminNetworkPolicyIngressRule describes an
                    action to take on a particular set of traffic destined for pods
                    selected by a BaselineAdminNetworkPolicy's Subject field.
                  properties:
                    action:
                      description: 'Action specifies the effect this rule will have
                        on matching traffic. Currently the following actions are supported:
                        Allow: allows the selected traffic Deny: denies the selected
                        traffic'
                      type: string
                    from:
                      description: From is the list of sources whose traffic this
                        rule applies to. If any AdminNetworkPolicyPeer matches the
                        source of incoming traffic then the specified action is applied.
                        This field must be defined and contain at least one item.
                      items:
                        description: AdminNetworkPolicyPeer defines an in-cluster
                          peer to allow traffic to/from. Exactly one of the selector
                          pointers must be set for a given peer. If a consumer observes
                          none of its fields are set, they must assume an unknown
                          option has been specified and fail closed.
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          namespaces:
                            description: Namespaces defines a way to select a set
                              of Namespaces.
                            maxProperties: 1
                            minProperties: 1
                            properties:
                              namespaceSelector:
                                description: NamespaceSelector is a labelSelector
                                  used to select Namespaces, This field follows standard
                                  label selector semantics; if present but empty,
                                  it selects all Namespaces.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              notSameLabels:
                                description: NotSameLabels is used to select a set
                                  of Namespaces that do not have certain values for
                                  a set of label(s). To be selected a Namespace must
                                  have all of the labels defined in NotSameLabels,
                                  AND at least one of them must have different values
                                  than the subject of this policy. If NotSameLabels
                                  is empty then nothing is selected.
                                items:
                                  type: string
                                maxItems: 100
                                type: array
                              sameLabels:
                                description: SameLabels is used to select a set of
                                  Namespaces that share the same values for a set
                                  of labels. To be selected a Namespace must have
                                  all of the labels defined in SameLabels, AND they
                                  must all have the same value as the subject of this
                                  policy. If Samelabels is Empty then nothing is selected.
                                items:
                                  type: string
                                maxItems: 100
                                type: array
                            type: object
                          pods:
                            description: Pods defines a way to select a set of pods
                              in in a set of namespaces.
                            properties:
                              namespaces:
                                description: Namespaces is used to select a set of
                                  Namespaces.
                                maxProperties: 1
                                minProperties: 1
                                properties:
                                  namespaceSelector:
                                    description: NamespaceSelector is a labelSelector
                                      used to select Namespaces, This field follows
                                      standard label selector semantics; if present
                                      but empty, it selects all Namespaces.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  notSameLabels:
                                    description: NotSameLabels is used to select a
                                      set of Namespaces that do not have certain values
                                      for a set of label(s). To be selected a Namespace
                                      must have all of the labels defined in NotSameLabels,
                                      AND at least one of them must have different
                                      values than the subject of this policy. If NotSameLabels
                                      is empty then nothing is selected.
                                    items:
                                      type: string
                                    maxItems: 100
                                    type: array
                                  sameLabels:
                                    description: SameLabels is used to select a set
                                      of Namespaces that share the same values for
                                      a set of labels. To be selected a Namespace
                                      must have all of the labels defined in SameLabels,
                                      AND they must all have the same value as the
                                      subject of this policy. If Samelabels is Empty
                                      then nothing is selected.
                                    items:
                                      type: string
                                    maxItems: 100
                                    type: array
                                type: object
                              podSelector:
                                description: PodSelector is a labelSelector used to
                                  select Pods, This field is NOT optional, follows
                                  standard label selector semantics and if present
                                  but empty, it selects all Pods.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            required:
                            - namespaces
                            - podSelector
                            type: object
                        type: object
                      minItems: 1
                      type: array
                    name:
                      description: Name is an identifier for this rule, that may be
                        no more than 100 characters in length. This field should be
                        used by the implementation to help improve observability,
                        readability and error-reporting for any applied BaselineAdminNetworkPolicies.
                      maxLength: 100
                      type: string
                    ports:
                      description: Ports allows for matching traffic based on port
                        and protocols. This field is a list of ports which should
                        be matched on the pods selected for this policy i.e the subject
                        of the policy. So it matches on the destination port for the
                        ingress traffic. If Ports is not set then the rule does not
                        filter traffic via port.
                      items:
                        description: AdminNetworkPolicyPort describes how to select
                          network ports on pod(s). Exactly one field must be set.
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          namedPort:
                            description: NamedPort selects a port on a pod(s) based
                              on name.
                            type: string
                          portNumber:
                            description: Port selects a port on a pod(s) based on
                              number.
                            properties:
                              port:
                                description: Number defines a network port value.
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              protocol:
                                default: TCP
                                description: Protocol is the network protocol (TCP,
                                  UDP, or SCTP) which traffic must match. If not specified,
                                  this field defaults to TCP.
                                type: string
                            required:
                            - port
                            - protocol
                            type: object
                          portRange:
                            description: PortRange selects a port range on a pod(s)
                              based on provided start and end values.
                            properties:
                              end:
                                description: End defines a network port that is the
                                  end of a port range, the End value must be greater
                                  than Start.
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              protocol:
                                default: TCP
                                description: Protocol is the network protocol (TCP,
                                  UDP, or SCTP) which traffic must match. If not specified,
                                  this field defaults to TCP.
                                type: string
                              start:
                                description: Start defines a network port that is
                                  the start of a port range, the Start value must
                                  be less than End.
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                            required:
                            - end
                            - start
                            type: object
                        type: object
                      maxItems: 100
                      type: array
                  required:
                  - action
                  - from
                  type: object
                maxItems: 100
                type: array
              subject:
                description: Subject defines the pods to which this BaselineAdminNetworkPolicy
                  applies.
                maxProperties: 1
                minProperties: 1
                properties:
                  namespaces:
                    description: Namespaces is used to select pods via namespace selectors.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  pods:
                    description: Pods is used to select pods via namespace AND pod
                      selectors.
                    properties:
                      namespaceSelector:
                        description: NamespaceSelector follows standard label selector
                          semantics; if empty, it selects all Namespaces.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      podSelector:
                        description: PodSelector is used to explicitly select pods
                          within a namespace; if empty, it selects all Pods.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - namespaceSelector
                    - podSelector
                    type: object
                type: object
            required:
            - subject
            type: object
          status:
            description: Status is the status to be reported by the implementation.
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            required:
            - conditions
            type: object
        required:
        - metadata
        - spec
        type: object
        x-kubernetes-validations:
        - message: Only one baseline admin network policy with metadata.name="default"
            can be created in the cluster
          rule: self.metadata.name == 'default'
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
{{- end }}
