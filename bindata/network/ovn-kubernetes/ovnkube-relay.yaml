---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: ovnkube-sbdb-relay
  namespace: openshift-ovn-kubernetes
  annotations:
    kubernetes.io/description: |
      This daemonset launches the ovn-kubernetes OVN SBDB relay networking components.
    release.openshift.io/version: "{{.ReleaseVersion}}"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ovnkube-sbdb-relay
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 10%
  template:
    metadata:
      annotations:
        target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
      labels:
        app: ovnkube-sbdb-relay
        component: network
        type: infra
        openshift.io/component: network
        kubernetes.io/os: "linux"
    spec:
      serviceAccountName: ovn-kubernetes-node
      hostNetwork: true
      hostPID: true
      priorityClassName: "system-node-critical"
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - ovnkube-sbdb-relay
            topologyKey: "kubernetes.io/hostname"
      # volumes in all containers:
      # (container) -> (host)
      # /etc/openvswitch -> /etc/openvswitch - ovsdb system id
      # /var/lib/openvswitch -> /var/lib/openvswitch/data - ovsdb data
      # /run/openvswitch -> tmpfs - ovsdb sockets
      # /env -> configmap env-overrides - debug overrides
      containers:
      # ovn-sbdb-relay: programs the vswitch with flows from the sbdb
      - name: ovn-sbdb-relay
        image: "{{.OvnImage}}"
        #image: registry.build01.ci.openshift.org/ci-ln-q4s05d2/stable@sha256:d800722549b1662175495416177ad1364faa9077c185e5fa00573c4abd7eb81e
        command:
        - /bin/bash
        - -c
        - |
          set -e
          if [[ -f "/env/${K8S_NODE}" ]]; then
            set -o allexport
            source "/env/${K8S_NODE}"
            set +o allexport
          fi  
          
          echo "$(date -Iseconds) - starting ovsdb-server as ovn-sbdb-relay"
          echo "Starting on node $HOSTNAME"
          ovsdb-server -vconsole:emer -vsyslog:err -vfile:info \
            --no-chdir \
            -p /ovn-cert/tls.key -c /ovn-cert/tls.crt -C /ovn-ca/ca-bundle.crt \
            --remote=pssl:"{{.OVN_SB_PORT}}":"${K8S_NODE_IP}" \
            --pidfile=/var/run/ovn/ovsdb-relay.pid \
            --unixctl=/var/run/ovn/ovnsb_relay_db.ctl \
            --log-file=/var/log/ovn/ovsdb-relay.log \
            relay:OVN_Southbound:"{{.OVN_SB_DB_LIST}}"
        securityContext:
          privileged: true
        env:
        - name: OVN_LOG_LEVEL
          value: info
        - name: K8S_NODE
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: K8S_NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        volumeMounts:
        - mountPath: /run/openvswitch
          name: run-openvswitch
        - mountPath: /run/ovn/
          name: run-ovn
        - mountPath: /etc/openvswitch
          name: etc-openvswitch
        - mountPath: /etc/ovn/
          name: etc-openvswitch
        - mountPath: /var/lib/openvswitch
          name: var-lib-openvswitch
        - mountPath: /env
          name: env-overrides
        - mountPath: /ovn-cert
          name: ovn-cert
        - mountPath: /ovn-ca
          name: ovn-ca
        - mountPath: /var/log/ovn
          name: node-log
        - mountPath: /dev/log
          name: log-socket
        terminationMessagePolicy: FallbackToLogsOnError
        resources:
          requests:
            cpu: 10m
            memory: 300Mi
      nodeSelector:
        node-role.kubernetes.io/worker: ""
        beta.kubernetes.io/os: "linux"
      volumes:
      # for checking ovs-configuration service
      - name: systemd-units
        hostPath:
          path: /etc/systemd/system
      # used for iptables wrapper scripts
      - name: host-slash
        hostPath:
          path: /
      - name: host-run-netns
        hostPath:
          path: /run/netns
      - name: var-lib-openvswitch
        hostPath:
          path: /var/lib/openvswitch/data
      - name: etc-openvswitch
        hostPath:
          path: /etc/openvswitch
      - name: run-openvswitch
        hostPath:
          path: /var/run/openvswitch
      - name: run-ovn
        hostPath:
          path: /var/run/ovn
      # Used for placement of ACL audit logs 
      - name: node-log
        hostPath: 
          path: /var/log/ovn
      - name: log-socket
        hostPath: 
          path: /dev/log
      # For CNI server
      - name: host-run-ovn-kubernetes
        hostPath:
          path: /run/ovn-kubernetes
      - name: host-cni-bin
        hostPath:
          path: "{{.CNIBinDir}}"
      - name: host-cni-netd
        hostPath:
          path: "{{.CNIConfDir}}"
      - name: host-var-lib-cni-networks-ovn-kubernetes
        hostPath:
          path: /var/lib/cni/networks/ovn-k8s-cni-overlay
      - name: ovnkube-config
        configMap:
          name: ovnkube-config
      - name: env-overrides
        configMap:
          name: env-overrides
          optional: true
      - name: ovn-ca
        configMap:
          name: ovn-ca
      - name: ovn-cert
        secret:
          secretName: ovn-cert
      - name: ovn-node-metrics-cert
        secret:
          secretName: ovn-node-metrics-cert
          optional: true
      tolerations:
      - operator: "Exists"
