kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: ovs-node
  namespace: openshift-ovn-kubernetes
  annotations:
    kubernetes.io/description: |
      This daemonset launches  Open vSwitch per-node networking components.
    release.openshift.io/version: "{{.ReleaseVersion}}"
spec:
  selector:
    matchLabels:
      app: ovs-node
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 10%
  template:
    metadata:
      labels:
        app: ovs-node
        component: network
        type: infra
        openshift.io/component: network
        kubernetes.io/os: "linux"
    spec:
      serviceAccountName: ovn-kubernetes-node
      hostNetwork: true
      hostPID: true
      priorityClassName: "system-node-critical"
      # volumes in all containers:
      # (container) -> (host)
      # /etc/openvswitch -> /var/lib/openvswitch/etc - ovsdb system id
      # /var/lib/openvswitch -> /var/lib/openvswitch/data - ovsdb data
      # /run/openvswitch -> tmpfs - ovsdb sockets
      # /env -> configmap env-overrides - debug overrides
      containers:
      # ovsdb and ovs-vswitchd
      - name: ovs-daemons
        image: "{{.OvnImage}}"
        command:
        - /bin/bash
        - -c
        - |
          #!/bin/bash
          set -euo pipefail
          if [[ -f "/env/${K8S_NODE}" ]]; then
            set -o allexport
            source "/env/${K8S_NODE}"
            set +o allexport
          fi
          export SYSTEMD_IGNORE_CHROOT=yes

          # systemctl cannot be used in a separate PID namespace to reach
          # the systemd running in PID 1. Therefore we need to use the dbus API
          systemctl_restart(){
            gdbus call \
              --system \
              --dest org.freedesktop.systemd1 \
              --object-path /org/freedesktop/systemd1/unit/"$(svc_encode_name ${1})"_2eservice \
              --method org.freedesktop.systemd1.Unit.Restart "replace"
          }
          svc_encode_name(){
            # systemd encodes some characters, so far we only need to encode
            # the character "-" but there may be more in the future.
            echo "${1//-/_2d}"
          }

            # In some very strange corner cases, the owner for /run/openvswitch
            # can be wrong, so we need to clean up and restart.
            ovs_uid=$(chroot /host id -u openvswitch)
            ovs_gid=$(chroot /host id -g openvswitch)
            chown -R "${ovs_uid}:${ovs_gid}" /run/openvswitch
            if [[ ! -S /run/openvswitch/db.sock ]]; then
              systemctl_restart ovsdb-server
            fi
            # We need to explicitly exit on SIGTERM, see https://github.com/openshift/cluster-dns-operator/issues/65
            function quit {
                exit 0
            }
            trap quit SIGTERM
            # Don't need to worry about restoring flows; this can only change if we've rebooted
            tail --pid=$BASHPID -F /host/var/log/openvswitch/ovs-vswitchd.log /host/var/log/openvswitch/ovsdb-server.log &
            wait
        env:
        - name: OVS_LOG_LEVEL
          value: info
        - name: K8S_NODE
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /lib/modules
          name: host-modules
          readOnly: true
        - mountPath: /sys
          name: host-sys
          readOnly: true
        - mountPath: /run
          name: host-run
        - mountPath: /etc/openvswitch
          name: etc-openvswitch
        - mountPath: /var/lib/openvswitch
          name: var-lib-openvswitch
        - mountPath: /env
          name: env-overrides
        - mountPath: /host
          name: host-slash
          readOnly: true
        resources:
          requests:
            cpu: 15m
            memory: 300Mi
        terminationMessagePolicy: FallbackToLogsOnError
        terminationGracePeriodSeconds: 10
      nodeSelector:
        beta.kubernetes.io/os: "linux"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: network.operator.openshift.io/external-openvswitch
                operator: DoesNotExist        
      volumes:
      # used for iptables wrapper scripts
      - name: host-modules
        hostPath:
          path: /lib/modules
      - name: var-lib-openvswitch
        hostPath:
          path: /var/lib/openvswitch/data
          type: DirectoryOrCreate
      - name: etc-openvswitch
        hostPath:
          path: /var/lib/openvswitch/etc
          type: DirectoryOrCreate
      - name: host-run
        hostPath:
          path: /run
      - name: host-sys
        hostPath:
          path: /sys
      - name: host-slash
        hostPath:
          path: /
      - name: env-overrides
        configMap:
          name: env-overrides
          optional: true
      tolerations:
      - operator: "Exists"
